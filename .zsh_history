
	chmod +x kubectl
	cloudflared tunnel run mytunnel
	logs=$(find /var/log -type f)for i in $logs; do > $i; done
	newgrp docker
	newgrp dockercurl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
	sudo apt install golang -y
	sudo apt install openjdk-21-jdk    # Debian/Ubuntu# ORsudo pacman -S jdk-openjdk         # Arch Linux (installs latest)
[200~lsof -i :8080~
[200~snap list~
[200~sudo systemctl enable apache2
# Add Docker's official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.ascsudo chmod a+r /etc/apt/keyrings/docker.asc# Add the repository to Apt sources:echo \  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \  sudo tee /etc/apt/sources.list.d/docker.list > /dev/nullsudo apt-get update
# Add Docker's official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.ascsudo chmod a+r /etc/apt/keyrings/docker.asc# Add the repository to Apt sources:echo \  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \  sudo tee /etc/apt/sources.list.d/docker.list > /dev/nullsudo apt-get update
# Add the AnyDesk GPG keysudo apt updatesudo apt install ca-certificates curl apt-transport-httpssudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://keys.anydesk.com/repos/DEB-GPG-KEY -o /etc/apt/keyrings/keys.anydesk.com.ascsudo chmod a+r /etc/apt/keyrings/keys.anydesk.com.asc# Add the AnyDesk apt repositoryecho "deb [signed-by=/etc/apt/keyrings/keys.anydesk.com.asc] https://deb.anydesk.com all main" | sudo tee /etc/apt/sources.list.d/anydesk-stable.list > /dev/null# Update apt caches and install the AnyDesk clientsudo apt updatesudo apt install anydesk
# Download and install nvm:curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash# in lieu of restarting the shell\. "$HOME/.nvm/nvm.sh"# Download and install Node.js:nvm install 22# Verify the Node.js version:node -v # Should print "v22.16.0".nvm current # Should print "v22.16.0".# Verify npm version:npm -v # Should print "10.9.2".
# Download and install nvm:curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash# in lieu of restarting the shell\. "$HOME/.nvm/nvm.sh"# Download and install Node.js:nvm install 22# Verify the Node.js version:node -v # Should print "v22.17.0".nvm current # Should print "v22.17.0".# Verify npm version:npm -v # Should print "10.9.2".
# Download and install nvm:curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash# in lieu of restarting the shell\. "$HOME/.nvm/nvm.sh"# Download and install Node.js:nvm install 22# Verify the Node.js version:node -v # Should print "v22.19.0".# Verify npm version:npm -v # Should print "10.9.3".
# Download kubectlcurl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"# Make it executablechmod +x kubectl# Move to PATHsudo mv kubectl /usr/local/bin/# Check versionkubectl version --client
# Get the latest stable versionKUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)# Download the kubectl binary for Linux AMD64curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"# Make it executablechmod +x kubectl# Move it to your system PATHsudo mv kubectl /usr/local/bin/
# Stop PulseAudio servicessystemctl --user stop pulseaudio.service pulseaudio.socket# Disable them to prevent auto-startingsystemctl --user disable pulseaudio.service pulseaudio.socket# Remove PulseAudio and its related packagessudo apt purge pulseaudio pulseaudio-utils pulseaudio-module-bluetooth pavucontrol # pavucontrol is the PulseAudio mixer, it should be replaced by plasma-pa or similar.
# Stop the old containerdocker stop jenkins# Remove itdocker rm jenkins# Now re-run with Java 21 imagedocker run -d \  -p 8080:8080 -p 50000:50000 \  -v ~/jenkins_home:/var/jenkins_home \  --name jenkins \  jenkins/jenkins:lts-jdk21
# Stop the service firstsudo systemctl stop mysql# Bootstrap the cluster directlysudo systemctl start mysql@bootstrap
# Verify the Node.js version:node -v # Should print "v22.14.0".nvm current # Should print "v22.14.0".# Verify npm version:npm -v # Should print "10.9.2".
# for Debian/Ubuntusudo apt install ffmpeg libsdl2-2.0-0 adb wget \                 gcc git pkg-config meson ninja-build libsdl2-dev \                 libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \                 libswresample-dev libusb-1.0-0 libusb-1.0-0-dev
$ python3 manage.py runserver
,s
----record=file.mp4
--record=file.mp4
./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
./adb devices
./anydesk_7.0.0-1_amd64.deb
./code_1.100.2-1747260578_amd64.deb
./scrcpy
./update_history_repo.sh
./zsh_setup.sh
/
/etc/docker > docker network lsNETWORK ID     NAME                                           DRIVER    SCOPE397548ed354f   bridge                                         bridge    local72c9672edb68   dockerize-php-and--sql-app_my_custom_network   bridge    local593637660a1b   host                                           host      local39f2c98d752d   none                                           null      local/etc/docker > 
/home/janak/Desktop/shared-nfs/ 192.168.1.0/24(rw,sync,no_subtree_check)
/sbin/ifconfig
/usr/bin/scrcpy
/usr/bin/vmware-modconfig --console --install-all
4.180.51.20
: 1759985055:0;wget https://repo.percona.com/apt/percona-release_latest.generic_all.debsudo dpkg -i percona-release_latest.generic_all.deb
: 1759985130:0;sudo apt update
: 1759985153:0;sudo percona-release setup pxc80sudo apt install percona-xtradb-cluster -y
: 1759985345:0;sudo percona-release setup pxc80sudo apt install percona-xtradb-cluster -y
: 1759985486:0;# 1. Remove the suggested packagessudo apt autoremove libmariadb3 liburing2 mariadb-common -y# 2. Force-remove any partially installed or conflicting packages# The 'percona-xtradb-cluster-common' is the one causing the error.sudo dpkg --purge --force-all percona-xtradb-cluster-common
: 1759985515:0;sudo rm -rf /etc/mysql/*
: 1759985544:0;ls
: 1759985547:0;sudo percona-release setup pxc80sudo apt install percona-xtradb-cluster -y
: 1759985752:0;sudo systemctl stop mysql
: 1759985870:0;sudo mkdir -p /etc/mysql/percona-xtradb-cluster.conf.d/
: 1759985897:0;sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
: 1759986092:0;ip a
: 1759986150:0;ip a
: 1759986159:0;sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
: 1759986325:0;sudo systemctl stop mysql
: 1759986332:0;sudo systemctl start mysql
: 1759986414:0;mysql -u root -p
: 1759986517:0;sudo ufw status
: 1759987595:0;sudo systemctl stop mysql
: 1759987729:0;sudo systemctl start mysql
: 1759988083:0;mysql -u root -p
: 1759988311:0;sudo systemctl stop mysql
: 1759988552:0;sudo systemctl start mysql
: 1759988763:0;mysql -u root -p
: 1759989022:0;sudo systemctl stop mysql
: 1759989044:0;cd /var/lib/mysql/
: 1759989050:0;sudo cd /var/lib/mysql/
: 1759989088:0;cd /var/lib/
: 1759989089:0;ls
: 1759989254:0;sudo rm -f /var/lib/mysql/grastate.dat
: 1759989264:0;sudo rm -f /var/lib/mysql/grastate.dat
: 1759989428:0;sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
: 1759989494:0;sudo systemctl stop mysql
: 1759989610:0;sudo systemctl start mysql
: 1759989618:0;cd
: 1759989641:0;mysql -u root -p
: 1759991252:0;sudo systemctl stop mysql
: 1759993063:0;sudo systemctl start mysql
: 1759993190:0;mysql -u root -p
: 1759993223:0;sudo tail -n 50 /var/log/mysql/error.log
: 1759993317:0;sudo systemctl stop mysqlsudo rm -f /var/lib/mysql/grastate.dat
: 1759993356:0;sudo systemctl start mysql@bootstrap
: 1759993577:0;sudo systemctl stop mysql
: 1759993596:0;sudo systemctl status mysql
: 1759993621:0;sudo systemctl status mysql
: 1760000457:0;sudo apt install rsync
: 1760000471:0;sudo apt updatesudo apt install dirmngr software-properties-common apt-transport-https ca-certificates curl -ycurl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | sudo bashsudo apt update
: 1760000585:0;sudo apt install mariadb-server mariadb-client galera-4 -y 
: 1760000983:0;sudo apt install mariadb-server mariadb-client galera-4 -y
: 1760001465:0;sudo mariadb-secure-installation
: 1760001503:0;sudo ufw enable
: 1760001524:0;sudo ufw status
: 1760001620:0;# Example for UFW (Ubuntu)sudo ufw allow 3306/tcp  # MariaDB client connectionssudo ufw allow 4567/tcp  # Galera replication (multicast and unicast)sudo ufw allow 4567/udp  # Galera replication (multicast)sudo ufw allow 4568/tcp  # Incremental State Transfer (IST)sudo ufw allow 4444/tcp  # State Snapshot Transfer (SST)sudo ufw reloadsudo ufw enable # If firewall is not already enabled
: 1760001655:0;sudo ufw allow 3306/tcpsudo ufw allow 4567/tcpsudo ufw allow 4567/udpsudo ufw allow 4568/tcpsudo ufw allow 4444/tcp
: 1760003894:0;sudo ufw allow 22/tcp
: 1760003902:0;sudo ufw reloadsudo ufw status
: 1760004119:0;mysql --versionsystemctl status mariadb
: 1760004702:0;ip a
: 1760004838:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760004903:0;sudo systemctl stop mariadb
: 1760004977:0;sudo galera_new_cluster
: 1760005173:0;sudo systemctl stop mariadb
: 1760005297:0;sudo systemctl start mariadb
: 1760005407:0;sudo mariadb -u root -p
: 1760005772:0;sudo systemctl stop mariadbsudo systemctl start mariadb
: 1760005814:0;sudo mariadb -u root -p
: 1760007751:0;clear
: 1760007753:0;ip a
: 1760007873:0;sudo systemctl stop mariadb
: 1760007901:0;sudo rm -f /var/lib/mysql/grastate.dat
: 1760007987:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760008053:0;sudo systemctl start mariadb
: 1760008072:0;sudo mariadb -u root -p
: 1760008151:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760071276:0;sudo mariadb -u root -p
: 1760071352:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760071374:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760071516:0;sudo systemctl stop mariadb
: 1760071530:0;sudo systemctl start mariadb
: 1760071548:0;sudo mariadb -u root -p
: 1760071835:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760071923:0;cd /var/lib/mysql
: 1760071925:0;ls
: 1760071941:0;sudo systemctl stop mariadb
: 1760072096:0;sudo cp -a /var/lib/mysql /var/lib/mysql_backup
: 1760072103:0;sudo rm -rf /var/lib/mysql/*
: 1760072105:0;ls
: 1760072129:0;sudo systemctl start mariadb
: 1760072161:0;sudo chown -R mysql:mysql /var/lib/mysql
: 1760072167:0;sudo systemctl start mariadb
: 1760072226:0;sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
: 1760072231:0;ls
: 1760072241:0;sudo chown -R mysql:mysql /var/lib/mysql
: 1760072247:0;sudo systemctl start mariadb
: 1760072259:0;sudo mariadb -u root -p
: 1760072343:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760072375:0;sudo tail -50 /var/log/mysql/error.log
: 1760072451:0;nc -zv 202.51.74.134 4567nc -zv 202.51.74.32 4567
: 1760072504:0;nc -zv 202.51.74.134 4568nc -zv 202.51.74.32 4568
: 1760072525:0;nc -zv 202.51.74.134 4444nc -zv 202.51.74.32 4444
: 1760072642:0;sudo ufw allow 4568/tcpsudo ufw allow 4444/tcpsudo ufw reload
: 1760072666:0;sudo ufw allow 4568/tcpsudo ufw allow 4444/tcpsudo ufw reload
: 1760072711:0;sudo systemctl restart mariadb
: 1760072766:0;sudo systemctl stop mariadb
: 1760072786:0;sudo systemctl start mariadb
: 1760072797:0;sudo mariadb -u root -p
: 1760072951:0;wsrep_sst_method=rsyncwsrep_sst_auth=sstuser:password
: 1760073254:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760073421:0;nc -zv node1_ip 4568nc -zv node2_ip 4568
: 1760073428:0;nc -zv node1_ip 4568nc -zv node2_ip 4568
: 1760073462:0;ls /usr/lib/galera/
: 1760073491:0;sudo systemctl stop mariadb
: 1760073521:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760073601:0;sudo systemctl stop mariadb
: 1760073604:0;sudo systemctl start mariadb
: 1760073629:0;mysql -u root -p -e "SHOW STATUS LIKE 'wsrep_cluster_size';"
: 1760073693:0;sudo systemctl status mariadb
: 1760073718:0;sudo mariadb
: 1760073797:0;sudo cat /etc/mysql/conf.d/galera.cnf
: 1760073817:0;ls /usr/lib/galera/libgalera_smm.so
: 1760073830:0;sudo systemctl restart mariadb
: 1760073841:0;sudo mariadb -e "SHOW STATUS LIKE 'wsrep_cluster_status';"
: 1760073858:0;sudo tail -n 50 /var/log/mysql/error.log
: 1760074186:0;sudo grep -R "wsrep_cluster_address\|wsrep_on\|wsrep_provider" /etc/mysql /etc/my.cnf /etc/mysql/conf.d /etc/mysql/mariadb.conf.d || truels -l /usr/lib/galera/libgalera_smm.sofile /usr/lib/galera/libgalera_smm.so
: 1760074270:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760074295:0;sudo systemctl restart mariadb
: 1760074316:0;sudo journalctl -u mariadb -n 50 --no-pager
: 1760074337:0;sudo mariadb -e "SHOW STATUS LIKE 'wsrep_cluster_size';"sudo mariadb -e "SHOW STATUS LIKE 'wsrep_cluster_status';"sudo mariadb -e "SHOW VARIABLES LIKE 'wsrep_cluster_address';"
: 1760074393:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760074412:0;ls -l /usr/lib/galera/libgalera_smm.so
: 1760074430:0;sudo systemctl restart mariadb
: 1760074441:0;sudo journalctl -u mariadb -n 30 --no-pager
: 1760074463:0;sudo mariadb -e "SHOW STATUS LIKE 'wsrep_cluster_size';"sudo mariadb -e "SHOW STATUS LIKE 'wsrep_cluster_status';"sudo mariadb -e "SHOW VARIABLES LIKE 'wsrep_cluster_address';"
: 1760074607:0;sudo nano /etc/mysql/conf.d/galera.cnf
: 1760074628:0;sudo systemctl restart mariadb
: 1760074636:0;sudo journalctl -u mariadb -n 60 --no-pager
: 1760074645:0;sudo mariadb -e "SHOW VARIABLES LIKE 'wsrep_provider'; SHOW VARIABLES LIKE 'wsrep_cluster_address'; SHOW STATUS LIKE 'wsrep_cluster_status'; SHOW STATUS LIKE 'wsrep_cluster_size';"
: 1760074661:0;sudo dmesg | grep -i apparmorsudo journalctl -k | grep -i apparmorsudo aa-status
;a
;d
;d 
AZ_REPO=$(lsb_release -cs)echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \  sudo tee /etc/apt/sources.list.d/azure-cli.list
CURRENT_KERNEL=$(uname -r)sudo apt remove $(dpkg -l | grep linux-image | awk '{print $2}' | grep -v "$CURRENT_KERNEL")sudo apt autoremovesudo update-grub
Docker Compose version v2.24.6docker compose version
HTOP
KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)echo $KUBECTL_VERSION
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"tar xf lazygit.tar.gz lazygitsudo install lazygit -D -t /usr/local/bin/
URL=https://www.aapanel.com/script/install_7.0_en.sh && if [ -f /usr/bin/curl ];then curl -ksSO "$URL" ;else wget --no-check-certificate -O install_7.0_en.sh "$URL";fi;bash install_7.0_en.sh aapanel
[ERROR] Fatal error in defaults handling. Program aborted
\. "$HOME/.nvm/nvm.sh"
\:q
_ansible
adb
adb --versionscrcpy --version
adb connect 192.168.1.80: 555
adb connect 192.168.1.80:5555
adb connect 192.168.1.87:5555
adb connect 192.168.1.90
adb connect 192.168.1.90:5555
adb devices
adb shell ip addr show wlan0
adb tcpip 5525
adb tcpip 5555
adduser kumar
ansible --version
ansible all -m ping
ansible aws_servers -m ping
ansible local_vms -a "uptime"
ansible local_vms -m ping
ansible local_vms -m setup
ansible webservers -a "uptime"
ansible-playbook first_playbook.yml
ansible-playbook first_playbook.yml -K
apt install ranger
apt list --installed | less
apt search fastfetch
apt search fd
apt search fd | grep fd
apt show vlc
aptitude moo
aws --version
aws configure
az --version
az account clear && az loginterraform plan
az account set --subscription "Azure for Students"
az account show
az account show --output table
az account show --query "{subscriptionId:id, tenantId:tenantId}"
az account show --query "{subscriptionId:id, tenantId:tenantId}" --output json
az account show --query id -o tsv
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/<subscription-id>"az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az ad sp create-for-rbac --name terraform-sp --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az group delete --name Janak-res --yes --no-wait
az login
az loginaz account set --subscription "Azure for Students"
az loginaz account show
az role assignment create --assignee 8c816d38-e764-4de5-9833-52ce956ad43a\  --role "Contributor" \  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az role assignment create \  --assignee "49efb880-f199-4ae9-be64-70d920488a2b" \  --role "Contributor" \  --scope "/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az role assignment create \  --assignee "95a2b8d6-c549-485c-876c-4e25657ddad1" \  --role "Contributor" \  --subscription "bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az role assignment create \  --assignee 2c6e5db5-620e-4b07-8b9a-90445f297d41 \  --role "Contributor" \  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az role assignment create \  --assignee 66ab3502-4703-4fca-9491-09986d5203ea \  --role "Contributor" \  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az role assignment list --assignee "49efb880-f199-4ae9-be64-70d920488a2b" --all --output table
az role assignment list --assignee 2c6e5db5-620e-4b07-8b9a-90445f297d41
az role assignment list --assignee 8c816d38-e764-4de5-9833-52ce956ad43a
az role assignment list --assignee 95a2b8d6-c549-485c-876c-4e25657ddad1
az version
btop
c
cal
cat .profile
cat .zshrc
cat /etc/apt/sources.list
cat /etc/debian_version
cat /etc/debian_versionlsb_release -a # If available
cat /etc/group | grep evening
cat /etc/passwd
cat /etc/resolv.conf
cat /home/janak/.ssh/known_hosts
cat /proc/cpuinfo
cat > input-file.txt << EOFapplebananacherryinvalid_entry_!!@#dateEOF
cat app.py
cat aws-janak.pem
cat boot.log
cat config
cat coverage.txt
cat fruits.txt
cat google-chrome.desktop
cat google-chrome.list
cat hosts
cat id_rsa.pub
cat jenkins.crt
cat jenkins.key
cat jenkins.pub
cat terraform-janak.pem
cat ~/.ssh/id_rsa.pub
cc
cd
cd 
cd  Jenkins_home
cd -
cd .,ssh
cd ..
cd .cache
cd .config
cd .config/tmux
cd .git
cd .ssh
cd .ssh/
cd .ssh\
cd .sshcd .sshcd .ssjh
cd .ssjh
cd /
cd /.cache
cd /.ssh
cd /cache
cd /etc/ansible
cd /etc/apt
cd /etc/docker
cd /etc/mysql/percona-xtradb-cluster.conf.d/
cd /etc/netplan/
cd /etc/nginx/
cd /home
cd /home | ls
cd /home/.ssh
cd /home/janak/Downloads/Dockerize-PHP-and--SQL-App/
cd /host
cd /local/bin
cd /opt
cd /root/.local/share/Trash/
cd /terraform
cd /tmpwget https://wordpress.org/latest.tar.gz
cd /usr/bin
cd /usr/bin/
cd /usr/lib/systemd
cd /usr/share/application/
cd /usr/share/applications/
cd /usr/share/keyrings
cd /var
cd /var/cache/apt/archives
cd /var/lib/docker/
cd /var/lib/docker/volumes/jenkins_home/_data
cd /var/log
cd /var/log/
cd /var/log/syslog
cd /var/www/htmlsudo cp wp-config-sample.php wp-config.phpsudo nano wp-config.php
cd 9cde489cec104f9b80f39bb2e2f6b41a
cd Desktop
cd Desktop/
cd Desktop/node-app
cd DevOps
cd Devops-Blogs
cd Docker-wordpress
cd Documents
cd Downloads
cd Downloads/
cd Downloads/django-todo/
cd Medical-php-sql-app
cd The TypeScript Compiler
cd The\ TypeScript\ Compiler
cd TypeScript Basics & Basic Types
cd TypeScript\ Basics\ \&\ Basic\ Types
cd WorldWise
cd ansible
cd aws
cd azure
cd bin
cd devops-blog
cd devops-blogs
cd django-todo
cd frontend
cd git
cd gitdemo
cd home
cd home | ls
cd host
cd journal
cd lazydocker
cd lkpho-Cloud-applications-with-Node.js-and-React/CD220Labs/http_server
cd log
cd my-docker-app
cd node\ app
cd sites-available
cd sites-enabled
cd sources.list.d
cd ssl
cd syncthing-linux-amd64-v1.29.7sudo mv syncthing /usr/local/bin/
cd syncthing-linux-amd64-v2.0.9
cd terraform
cd terraform-azure-vm
cd test
cd tmux
cd wp
cd ~
cd ~/.cache/google-chrome/Default/Cache
cd ~/.local/share/Trash
cd ~/.ssh/
cd ~/azure-vm-terraform # Or whatever your project directory is called
cd ~rm -rf syncthing-linux-amd64-v2.0.9rm syncthing-linux-amd64-v2.0.9.tar.gz
cdd
chmod +x ./kubectl
chmod +x VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
chmod +x kubectl
chmod +x zsh_setup.sh
chmod +x ~/.docker/cli-plugins/docker-compose
chmod 400 "jan-jenkins.pemchmod 400 "jan-jenkins.pem
chmod 400 devops_key.pem
chmod 400 jan-jenkins.pem
chmod 400 terraform-janak.pem
chmod 400 terraform-janak.pemssh -i terraform-janak.pem ec2-user@34.205.64.73
chmod 600 id_rsa
chmod 600 jan-jenkins.pem
chmod 600 jenkins
chmod 600 jenkins-test.pem
chmod 600 jenkins.pub
chmod 600 ~/.ssh/aws-janak.pem
chmod 600 ~/.ssh/az-janak.pem
chmod 600 ~/.ssh/devops_key.pem
chmod 600 ~/.ssh/devops_key_0616.pem
chmod 600 ~/.ssh/id_rsa
chsh -s $(which bash)
chsh -s $(which zsh)
cleaer
clear
cler
cloudflared tunnel create mytunnel
cloudflared tunnel create ssh-tunnel
cloudflared tunnel login
cloudflared tunnel route dns mytunnel local.janakkumarshrestha0.com.np
cloudflared tunnel route dns mytunnel local.janakkumarshrestha0.com.npcloudflared tunnel route dns mytunnel ssh.janakkumarshrestha0.com.np
cloudflared tunnel run mytunnel
co
code 
code   .
code .
code .d
code l
curl -L https://github.com/jesseduffield/lazydocker/releases/download/v0.24.1/lazydocker_0.24.1_Linux_x86_64.tar.gz -o lazydocker.tar.gz
curl -L https://github.com/jesseduffield/lazygit/releases/download/v0.55.0/lazygit_0.55.0_linux_x86_64.tar.gz -o lazydocker.tar.gz
curl -L https://github.com/jesseduffield/lazygit/releases/download/v0.55.0/lazygit_0.55.0_linux_x86_64.tar.gz -o lazygit.tar.gz
curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO https://storage.googleapis.com/kubernetes-release/release/$\(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt\)/bin/linux/amd64/kubectl
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
curl -fsSL https://raw.githubusercontent.com/janak0ff/zsh/main/setup_zsh.sh | bash
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | \  sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && \  echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | \  sudo tee /etc/apt/sources.list.d/ngrok.list && \  sudo apt update && \  sudo apt install ngrok
curl -s wttr.in/casablanca
curl -s wttr.in/kathmandu
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg
curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg
curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg echo "deb https://debian.griffo.io/apt $(lsb_release -sc 2>/dev/null) main" | sudo tee /etc/apt/sources.list.d/debian.griffo.io.list sudo apt update
curl http://localhost:80
curl https://raw.githubusercontent.com/sudiplun/dotfiles/refs/heads/main/tmux/tmux.conf > tmux.conf
curl https://raw.githubusercontent.com/sudiplun/dotfiles/refs/heads/main/vim/.vimrc
curl https://raw.githubusercontent.com/sudiplun/dotfiles/refs/heads/main/vim/.vimrc > .vimrc
curl wttr.in/casablanca
curl wttr.in/dubai
curl wttr.in/manthali
curl wttr.in/rasuwa
d
deactivate
df -h
dmesg | tail -20
docker --version
docker --versiondocker compose version
docker -v
docker build -t my-flask-app .
docker compose down
docker compose down -v
docker compose downdocker compose up --build -d
docker compose up --build -d
docker compose up -d
docker compose up -d --build
docker compose version
docker exec -it jenkins bash
docker exec jenkins cat /var/jenkins/secrets/initialAdminPassword
docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
docker images
docker images prune -a
docker network create jenkins-net
docker network ls
docker network ls 
docker network rm dockerize-php-and--sql-app_my_custom_network
docker ps
docker ps -a
docker pull hello-world
docker pull ja7adr/w3schools
docker pull jenkins/jenkins:lts
docker pull molly/privateimage
docker rm -f jenkins
docker run -d --name jenkins -p 8080:8080 -p 50000:50000 -v jenkins:/var/jenkins jenkins/jenkins:lts
docker run -d -p 5000:5000 my-flask-app
docker run -d -p 8080:80 nginx
docker run -d \  --name jenkins \  -p 8080:8080 -p 50000:50000 \  -v ~/jenkins_home:/var/jenkins_home \  jenkins/jenkins:lts
docker run -d \  --name jenkins \  -p 8080:8080 \  -p 50000:50000 \  -v jenkins_home:/var/jenkins_home \  jenkins/jenkins:lts
docker run -d \  -p 8080:8080 -p 50000:50000 \  -v ~/jenkins_home:/var/jenkins_home \  --name jenkins \  jenkins/jenkins:lts-jdk21
docker run -p 4321:80 astropaper
docker run hello-world
docker search jenkins
docker start jenkins
docker stop $(docker ps -aq)docker rm $(docker ps -aq)
docker stop docker-wordpress-1
docker stop f265c5e98595
docker stop jenkins
docker stop mariadb_server
docker stop php_web_app
docker tag my-flask-app janak0ff/my-flask-app
docker volume
docker volume create jenkins-data
docker volume create jenkins-docker-certs
docker volume inspect jenkins
docker volume ls
docker-compose -v
docker-compose up -d
dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1 | xargs sudo apt-get -y purge
dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1 |xargs sudo apt-get -y purge
dpkg -l | grep linux-image
dpkg-query -W --showformat='${Installed-Size}\t${Package}\n' | sort -nr | awk '{printf "%-10s %s MB\n", $1/1024, $2}'
e
echo "This is the original file." > original.txt
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.listsudo apt update
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
echo "flask" > requirements.txt
echo "hello"
echo $SHELL
echo $XDG_CURRENT_DESKTOP
echo 'deb http://download.opensuse.org/repositories/home:/clayrisser:/bookworm/Debian_12/ /' | sudo tee /etc/apt/sources.list.d/home:clayrisser:bookworm.listcurl -fsSL https://download.opensuse.org/repositories/home:clayrisser:bookworm/Debian_12/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_clayrisser_bookworm.gpg > /dev/nullsudo apt update
echo -e "\n== SYSTEM =="; uname -a; echo -e "\n== CPU =="; lscpu | grep 'Model\|CPU'; echo -e "\n== MEMORY =="; free -h; echo -e "\n== DISK =="; df -h; echo -e "\n== NETWORK =="; ip a
echo -e "banana\napple\ncherry" > fruits.txtecho -e "dog\ncat\nzebra" > animals.txt
echo \  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
echo \  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \  sudo tee /etc/apt/sources.list.d/docker.list > /dev/nullsudo apt-get update
echo \  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \  sudo tee /etc/apt/sources.list.d/docker.list > /dev/nullsudo apt-get update
env
exit
export ARM_SUBSCRIPTION_ID="bf97eca7-bcbd-41ce-bc31-9c5d684f2073"export ARM_TENANT_ID="69c13822-3598-4d4d-aae2-f1420ad786ab"export ARM_CLIENT_ID=""export ARM_CLIENT_SECRET=""
export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
export PATH="/usr/local/bin/terraform:$PATH"
export PATH="/usr/local/bin:$PATH"
fastfetch
fd
find /etc -name "*.conf"
find /home/janak -name "jen-jenkins.pem"
find /usr -name gcc
find /var -type d -name "logs"
find /var/log -type f -regex ".*\.gz$" | xargs rm -Rffind /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf
for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
gemini
ghostty
git add .
git branch
git branch -M content.md
git branch -M master
git checkout  master
git checkout -b dev
git checkout -b main
git checkout -b master
git checkout dev
git checkout main
git checkout master
git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autocomplete
git clone --depth 1 https://github.com/jesseduffield/lazydocker.gitcd lazydockergo install
git clone git@github.com:janak0ff/Content-Rating--IBM.git
git clone git@github.com:janak0ff/DevOps.git
git clone git@github.com:janak0ff/Dockerize-PHP-and--SQL-App.git
git clone git@github.com:janak0ff/E-Commerce-Data-Rendering-RTK-IBM.git
git clone git@github.com:janak0ff/Event-Planner-IBM.git
git clone git@github.com:janak0ff/Feedback-Form-for-Survey-IBM.git
git clone git@github.com:janak0ff/Fetch-Data-Using-useFetch-IBM.git
git clone git@github.com:janak0ff/Tanstack-Query---Learn.git
git clone git@github.com:janak0ff/Todo-List-Application-IBM.git
git clone git@github.com:janak0ff/Wild-Oasis.git
git clone git@github.com:janak0ff/WorldWise.git
git clone git@github.com:janak0ff/devops-blog.git
git clone git@github.com:janak0ff/django-todo.git
git clone git@github.com:janak0ff/janak0ff.github.io.git
git clone https://github.com/Genymobile/scrcpycd scrcpy./install_release.sh
git clone https://github.com/cotes2020/jekyll-theme-chirpy.git
git clone https://github.com/ibm-developer-skills-network/lkpho-Cloud-applications-with-Node.js-and-React.git
git clone https://github.com/janak0ff/Feedback-Form-for-Survey-IBM.git
git clone https://github.com/janak0ff/Understanding-Typescript.git
git clone https://github.com/janak0ff/janak0ff.github.io.git
git clone https://github.com/shreys7/django-todo.git
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
git commit -m "mod"
git commit -m "python test"
git commit -m "txt"
git commit m "modi"
git config --global user.email "janakkrshrestha@gmail.com"git config --global user.name "Janak kr Shrestah"
git config pull.rebase falsegit pull origin main
git config pull.rebase truegit pull origin main
git filter-repo --path 'src/data/blog/_terraform/terraform azure.md' --invert-paths
git filter-repo --path 'src/data/blog/_terraform/terraform azure.md' --invert-paths --force
git init
git pull
git pull origin main
git push
git push -u origin main
git push -u origin master
git push origin -u content.md
git push origin main
git push origin master
git push origin master --force
git rebase -i HEAD~5
git remote -v
git remote add origin git@github.com:janak0ff/devops-blog.git
git remote add origin https://github.com/janak0ff/devops-blog.git
git remote set-url origin https://github.com/janak0ff/lkpho-Cloud-applications-with-Node.js-and-React.git
git status
go install github.com/jesseduffield/lazydocker@latest
gpg --generate-key
grep "error" /var/log/syslog > found_lines.txt
grep "menuentry '" /boot/grub/grub.cfg | less
grep -w "root" /etc/passwd
grep docker /etc/group
hardinfo
head -n 22 coverage.txt
hostname -I
hostnamectl
htop
htop 
htop 5
ifconfig
ind /var -type d -name "logs"
inxi -Fxz
ip   a
ip -v
ip a
ip addr show docker0ip route show
ip addr showip route show
ip link show
ip route show
ipfconfig
isolation.tools.copy.disable = "FALSE"isolation.tools.paste.disable = "FALSE"isolation.tools.dnd.disable = "FALSE"isolation.tools.hgfs.disable = "FALSE"
janak
journalctl
journalctl -r
journalctl | grep "error" > found_lines.txt
kubectl version --client
kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0
kwriteconfig5 --file kscreenlockerrc --group Daemon --key ScaleFactor 1kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0rm ~/.config/kscreenlockerrcrm ~/.local/share/kscreen/*
l
l;s
la
last
lazgit
lazydocker
lazygit
lazynpm
ld
less -N 20 boot.log
less -N server.log
less -N test_log.txt
less /path/to/your/large_log_file.log
less coverage.txt
less server.log
less syslog
lg
lls
ln
ln original.txt hardlink1.txt
ln original.txt hardlink2.txt
logs=$(find /var/log -type f)for i in $logs; do > $i; done
lqa
ls
ls -;
ls -a
ls -al
ls -h
ls -l
ls -l ~/.zsh_historytail ~/.zsh_history
ls -la
ls -lai
ls -li original.txt hardlink1.txt hardlink2.txt
ls /boot/vmlinuz-*ls /boot/initrd.img-*ls /boot/config-*
ls /media/janak/
ls /media/janak/GET/
ls /var/log/messages
ls ~/.ssh/id_rsa.pub
lsa
lsb_release -a
lsb_release -cs
lsblk
lsof -i :80
lsof -i :8080
lsof -i :8888
man
man -cd
man cd
man ip
man ln
man ls
man man
mariadb --version
mariadb -u janak -p elearn < elearn.sql
mariadb -u root -p
minikube version
mkdir -p /shared/{data,documents}sudo chown -R nobody:nogroup /shared
mkdir -p ~/.docker/cli-plugins
mkdir -p ~/jenkins_homesudo chown -R 1000:1000 ~/jenkins_home
mkdir -v test_dir
mkdir Devops-Blogs
mkdir Docker-wordpress && cd Docker-wordpress
mkdir git 
mkdir gitdemo
mkdir janakkk
mkdir my-docker-appcd my-docker-app
mkdir readmore
mkdir terraform-azure-vmcd terraform-azure-vm
mkdir test
mkdir tmux
mv *.md readmore
mv ~/.zsh_history_merged ~/.zsh_history
mysql --version
mysql --versionsystemctl status mariadb
mysql -u root -p
mysql -u root -pSHOW STATUS LIKE 'wsrep_cluster_size';
n
nala search fd | grep fd
nala update 
nano /.cloudflared/config.yml
nano /etc/cloudflared/config.yml
nano Dockerfile
nano How to Cast Your Android Screen Wirelessly Using scrcpy.md
nano app.py
nano comprehensive overview of your Linux system.md
nano docker-compose.yml
nano first_playbook.yml
nano lazydocker-install.md
nano main.tf
nano phpmyadmin-forgot-pass.md
nano pm2.md
nano py-http-server.md
nano server.log
nano terraform.tfvars
nano todoApp/settings.py
nano ~/.zshrc
neofetch
netstat -an | findstr 3389
newgrp docker
ngrok config 2xGawLWOy4GtE59ztIFmOJPl18y_7SuhmTMcmt65ppHV4MQtW
ngrok config add-authtoken 2xGawLWOy4GtE59ztIFmOJPl18y_7SuhmTMcmt65ppHV4MQtW
ngrok http 3000
ngrok tcp 22
nmtui
no hello
node --version
node -v
node app.js
npm cache clean --force
npm create astro@latest
npm create astro@latest -- --template satnaing/astro-paper
npm i
npm i @supabase/supabase-js
npm i date-fns
npm i heroicons
npm install
npm install -g @google/gemini-cligemini
npm install -g ngrok
npm install -g npm@11.5.2
npm install -g pnpm
npm install -g pnpm@latest-10
npm install -g typescript
npm install @heroicons/react
npm install pm2 -gpm2 start app.jspm2 savepm2 startup
npm run build
npm run defv
npm run dev
npm run prod
npm start
npx astro dev
npx create-next-app@14 the-wild-oasis-web
npx create-next-app@latest
nvm install 22
obs
open-vm-tools
pass init 8CF89E98515CC63726A7C99DDA8C04BC882134F6
php -S localhost:8000
php -S localhost:8888
ping -c 4 202.51.74.106
ping 103.86.22.220 22
ping 103.86.22.220 3389
ping 103.90.86.220
ping 103.90.86.220 22
ping 110.34.5.212
ping 172.17.0.1
ping 172.22.27.155
ping 191.168.1.98
ping 191.168.189.10
ping 192.168.1.64
ping 192.168.189.131
ping 202.51.74.32
ping 35.175.145.25
ping 35.175.195.51
ping 45.115.218.154
ping 54.89.204.89
ping google.com
pip freeze > requirements.txt
pip install -r requirements.txt
pip install django
pip install djangopython manage.py runserver
pip install virtualenv
pipewire --version
pm2
pnpm -v
pnpm create astro@latest --template satnaing/astro-paper
pnpm install
pnpm run build
pnpm run built
pnpm run dev
pnpm start
podd
popd
poweroff
ps -a
ps -au
ps -aux
ps aux
ps aux |grep bluetoo
ps aux |grep eval
ps aux |grep ssh-agent
pushd /home/
pushd /opt
pushd /usr/local 
pwd
py test.py
python --version
python --versionpython3 --version
python -m venv venv
python manage.py createsuperuser
python manage.py makemigrations
python manage.py makemigrationspython manage.py migrate
python manage.py migrate
python manage.py runserver
python3 --version
python3 --versionpython --version
python3 -m ensurepip --default-pip
python3 -m http.server 6789 --bind 0.0.0.0
python3 -m pip install --user ansible
python3 -m venv venv
python3 -v
python3 manage.py createsuperuser
python3 manage.py makemigrations # Only needed if you made model changespython3 manage.py migrate
python3 manage.py runserver 0.0.0.0:8000
python3.11 -m venv env
python3.11 -m venv envsource env/bin/activate
python3.12 -v
python3.7 --version
q
ranger
reboot
rehash
rm -i
rm -i README.md
rm -rf 
rm -rf /
rm -rf /home/*/.local/share/Trash/*/**rm -rf /root/.local/share/Trash/*/**
rm -rf env
rm -rf envpython3.11 -m venv --without-pip --clear envsource env/bin/activate
rm -rf jekyll-theme-chirpy
rm -rf lazygit
rm -rf node_modules package-lock.json
rm -rf syncthing-linux-amd64-v2.0.9rm syncthing-linux-amd64-v2.0.9.tar.gz
rm -rf venv
rm -rf ~/.cache/thumbnails/*
rm .vimrc
rm lazydocker.tar.gzrm README.md
rm lazygit.tar.gz
rm requirements.txt
rm syncthing-linux-amd64-v1.29.7.tar.gzrm -r syncthing-linux-amd64-v1.29.7
rmdir -rf test_dir
rmdir test_dir
rsync -avz ubuntu@202.51.74.210:/home/ubuntu/.zsh_history ~/server_zsh_history
rsync -avz ubuntu@202.51.74.32:/home/ubuntu/.zsh_history ~/ 
sc
scp -i ~/terraform/aws/terraform-janak.pem index.php ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com:/home/ubuntu/php-sql-app/index.php
scp -r -i /path/to/your/key.pem . ubuntu@your_ec2_public_ip:/home/ubuntu/your_app_name cd /home/janak
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-13-222-240-47.compute-1.amazonaws.com:/home/admin/app
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-3-83-158-134.compute-1.amazonaws.com:/home/admin/app
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-44-206-242-143.compute-1.amazonaws.com:/home/admin/app
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-54-174-88-245.compute-1.amazonaws.com:/home/admin/app
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-54-89-216-5.compute-1.amazonaws.com:/home/admin/app
scp -r -i ~/.ssh/id_rsa . ubuntu@202.51.74.30:/home/ubuntu/php-sql-app
scp -r -i ~/terraform/aws/terraform-janak.pem . ubuntu@ec100.27.29.251.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
scp -r -i ~/terraform/aws/terraform-janak.pem . ubuntu@ec2-100-27-29-251.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
scp -r -i ~/terraform/aws/terraform-janak.pem . ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
scp -r -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
scrcpy
scrcpy --audio-source=playback
scrcpy --max-size --video-bit-rate 20M  --fullscreen
scrcpy --max-size 1080 --bit-rate 16M --turn-screen-off
scrcpy --max-size 1080 --video-bit-rate 20M --turn-screen-off --fullscreen
scrcpy --max-size 1080 --video-bit-rate 6M
scrcpy --max-size 1280
scrcpy --max-size 1920   --video-bit-rate 20M  --fullscreen
scrcpy --max-size 1920   --video-bit-rate 20M  --fullscreen --record=file.mp4
scrcpy --max-size 1920 --bit-rate 8M
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen 
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen  --stay-awake
scrcpy --max-size 1920 --video-bit-rate 8M
scrcpy -d
scrcpy -e
scrcpy -s 192.168.1.87:5555
scrcpy -s 96407569930008W
screenfetch
snap list
sort < animals.txt >> sorted_fruits.txtcat sorted_fruits.txt
sort < fruits.txt
sort < fruits.txt > sorted_fruits.txtcat sorted_fruits.txt
sort < unsorted.txt
source env/bin/activate
source venv/bin/activate
source ~/.zshrc
ssh -
ssh -V -i devops_key.pem janak0ff@4.242.192.92
ssh -i "jan-jenkins.pem" ubuntu@2-3-88-51-147
ssh -i "jan-jenkins.pem" ubuntu@ec2-3-88-51-147.compute-1.amazonaws.com
ssh -i "janak.pem" ec2-user@ec2-54-89-204-89.compute-1.amazonaws.com
ssh -i -V devops_key.pem janak0ff@4.242.192.92
ssh -i -v  devops_key.pem janak0ff@4.242.192.92
ssh -i datahub-intern@202.51.74.27
ssh -i debian@192.168.253.136
ssh -i devops-key janak0ff@4.242.192.92
ssh -i devops_key janak0ff@4.242.192.92
ssh -i devops_key.pem janak0ff@4.242.192.92
ssh -i hello.pem
ssh -i intern@202.51.74.27
ssh -i janak@172.16.25.150 -p 22
ssh -i janak@192.168.189.129
ssh -i terraform-janak.pem ec2-user@18.205.161.34
ssh -i terraform-janak.pem ec2-user@18.234.190.202
ssh -i terraform-janak.pem ec2-user@3.85.61.224
ssh -i ubuntu@172.16.25.150
ssh -i ubuntu@172.16.25.150 -p 22
ssh -i ubuntu@202.51.74.27
ssh -i xeUci4Rm@202.51.74.27
ssh -i ~/.ssh/aws-janak.pem  admin@35.172.133.142
ssh -i ~/.ssh/aws-janak.pem  admin@54.242.147.208
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-13-222-240-47.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-3-83-158-134.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-44-206-242-143.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-54-147-218-42.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-54-174-88-245.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-54-89-216-5.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  ubuntu@13.221.102.188
ssh -i ~/.ssh/aws-janak.pem  ubuntu@3.85.109.97
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ssh -i ~/.ssh/aws-janak.pem  ubuntu@52.202.151.15
ssh -i ~/.ssh/aws-janak.pem  ubuntu@54.161.43.153
ssh -i ~/.ssh/aws-janak.pem  ubuntu@54.242.147.208
ssh -i ~/.ssh/aws-janak.pem  ubuntu@54.80.49.126
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-3-87-4-161.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-44-202-30-180.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-44-210-144-130.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem admin@ec2-13-222-240-47.compute-1.amazonaws.com
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@20.40.56.19
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
ssh -i ~/.ssh/devops_key janak0ff@4.242.192.92
ssh -i ~/.ssh/devops_key.pem janak0ff@4.242.192.92
ssh -i ~/.ssh/devops_key.pem janak0ff@54.144.193.168
ssh -i ~/.ssh/devops_key_0616.pem azureuser@20.169.90.125
ssh -i ~/.ssh/id_rsa  janak@172.16.25.150
ssh -i ~/.ssh/id_rsa  root@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.1
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235 -p 49499
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.34
ssh -i ~/.ssh/id_rsa Janak-aws-vm@40.68.191.75
ssh -i ~/.ssh/id_rsa adminuser@20.61.60.198
ssh -i ~/.ssh/id_rsa adminuser@4.180.51.20
ssh -i ~/.ssh/id_rsa aws_janak@20.61.60.198
ssh -i ~/.ssh/id_rsa janak_aws@135.236.2.223
ssh -i ~/.ssh/id_rsa janak_aws@20.61.60.198
ssh -i ~/.ssh/id_rsa janak_aws@40.68.191.75
ssh -i ~/.ssh/id_rsa janak_azure@18.205.161.34
ssh -i ~/.ssh/id_rsa janak_azure@51.136.100.152
ssh -i ~/.ssh/id_rsa ubuntu@202.51.74.27
ssh -i ~/.ssh/jan-jenkins.pem ubuntu@54.144.193.168
ssh -i ~/.ssh/terraform-janak.pem  ubuntu@ec2-44-202-30-180.compute-1.amazonaws.com
ssh -i ~/terraform/aws/terraform-janak.pem  ubuntu@ec2-35-173-177-9.compute-1.amazonaws.co
ssh -i ~/terraform/aws/terraform-janak.pem ec2-user@18.205.161.34
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-100-27-29-251.compute-1.amazonaws.com
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec35.175.145.25.compute-1.amazonaws.com
ssh -iv janak@192.168.189.129
ssh -v -i hello.pem ubuntu@54.210.240.249
ssh -v -i jan-jenkins.pem ubuntu@3.88.51.147
ssh janak@172.16.25.150
ssh janak@191.168.189.1
ssh janak@191.168.189.1 -p 32
ssh janak@191.168.189.10
ssh janak@192.168.
ssh janak@192.168.1.64 
ssh janak@192.168.1.64 -p 22
ssh janak@192.168.1.66
ssh janak@192.168.1.66 -p 22
ssh janak@192.168.100.9
ssh janak@192.168.189.0
ssh janak@192.168.189.10
ssh janak@192.168.189.129
ssh janak@192.168.189.131 -p 22
ssh janak@192.168.189.25
ssh janak@192.168.253.100
ssh janak@192.168.253.100~
ssh janak@192.168.253.135
ssh janak@192.168.253.136
ssh janak@192.168.253.136 -p 22
ssh janak@192.168.253.137
ssh janak@192.168.253.137 -p 22
ssh janak@192.168.253.138
ssh janak@192.168.253.138 -p 22
ssh janak@192.168.63.132
ssh janak@192.168.63.132 -p 22
ssh janak@192.168.63.138
ssh jenkins
ssh key-gen
ssh kumar@192.168.253.138
ssh root@103.90.86.244
ssh root@202.51.74.117
ssh root@202.51.74.127
ssh root@202.51.74.210
ssh root@202.51.74.30
ssh ubuntu@103.90.86.210
ssh ubuntu@103.90.86.244
ssh ubuntu@202.51.74.117
ssh ubuntu@202.51.74.127
ssh ubuntu@202.51.74.134
ssh ubuntu@202.51.74.210
ssh ubuntu@202.51.74.34
ssh ubuntu@202.51.74.60
ssh-keygen
ssh-keygen -f "/home/janak/.ssh/known_hosts" -R "202.51.74.127"
ssh-keygen -f "/home/janak/.ssh/known_hosts" -R "202.51.74.134"
ssh-keygen -f "/home/janak/.ssh/known_hosts" -R "202.51.74.210"
ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa_azure
ssh-keygen -t rsa -b 4096 -C "janak0ff@gmail.com"
su -
su - kumar
su kumar
sudo  apt-get -y docker compose
sudo  docker ps
sudo -i
sudo -i dpkg ./anydesk_7.0.0-1_amd64.deb
sudo -s
sudo -scd /var/lib/docker/
sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
sudo ./VMware-Workstation-Full-17.6.4-24832109.x86_64.bundle
sudo ./code_1.100.2-1747260578_amd64.deb
sudo ./zsh_setup.sh
sudo .zshrc
sudo /etc/init.d/vmware stop
sudo /usr/bin/vmware-modconfig --console --install-all
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo add-apt-repository ppa:obsproject/obs-studio
sudo add-apt-repository ppa:obsproject/obs-studiosudo apt updatesudo apt install obs-studio
sudo adduser evening
sudo adduser kumar
sudo apt --fix-broken install -ysudo dpkg --configure -asudo apt cleansudo apt autoremove -y
sudo apt --fix-broken install -ysudo dpkg --configure -asudo apt update
sudo apt -S nginx
sudo apt autoclean
sudo apt autoremove
sudo apt autoremovesudo apt autoclean
sudo apt clean
sudo apt dust-upgrade -y
sudo apt full-upgrade -y
sudo apt instal
sudo apt install --reinstall pipewire pipewire-audio-client-libraries pipewire-alsa pipewire-jack pipewire-pulse wireplumber
sudo apt install --reinstall plasma-pa
sudo apt install --reinstall xdg-desktop-portal xdg-desktop-portal-kde
sudo apt install -y chromium-browser
sudo apt install -y docker-compose
sudo apt install ./anydesk_7.0.0-1_amd64.deb
sudo apt install ./code_1.100.2-1747260578_amd64.deb
sudo apt install ./ghostty_1.2.1-1+trixie_amd64.deb
sudo apt install ./rustdesk-1.4.2-x86_64.deb
sudo apt install adb
sudo apt install adb scrcpy
sudo apt install ansible -y
sudo apt install apache2 -y
sudo apt install btop
sudo apt install build-essential linux-headers-$(uname -r)
sudo apt install chromium
sudo apt install copyq
sudo apt install curlsudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpgsudo curl -fsSLo /etc/apt/sources.list.d/brave-browser-release.sources https://brave-browser-apt-release.s3.brave.com/brave-browser.sourcessudo apt updatesudo apt install brave-browser
sudo apt install docker-compose -y
sudo apt install docker.io
sudo apt install docker.io -y
sudo apt install fastfetch
sudo apt install fasttetch
sudo apt install fd
sudo apt install filelight
sudo apt install filelight htop 
sudo apt install ghostty
sudo apt install gimp
sudo apt install git-filter-repo
sudo apt install gnome-disk-utility
sudo apt install go
sudo apt install inxi
sudo apt install jupyterlab
sudo apt install kde-plasma-desktop
sudo apt install kolourpaint
sudo apt install lazydocker
sudo apt install lazygit
sudo apt install lsof
sudo apt install lvm2 dosfstools e2fsprogs
sudo apt install mariadb-server
sudo apt install mariadb-server -y
sudo apt install mariadb-server mariadb-client -y
sudo apt install mariadb-server mariadb-client galera-4 -y
sudo apt install mariadb-server mariadb-client galera-4 -y 
sudo apt install mariadb-server mariadb-client galera-4 -y # For MariaDB 10.4+ or later, galera-4 is the provider.                                                           # For older versions (e.g., 10.3), use galera-3.
sudo apt install mariadb-server mariadb-client galera-4 -y\\n
sudo apt install nala
sudo apt install neofetch
sudo apt install net-tool
sudo apt install net-tools
sudo apt install nfs-kernel-server
sudo apt install nfs-kernel-server nfs-common -y
sudo apt install nginx
sudo apt install nginx ufw 
sudo apt install obs-studio
sudo apt install open-vm-tools open-vm-tools-desktop -y
sudo apt install pinta
sudo apt install pipewire-audio pipewire-pulse pipewire-alsa pipewire-jack wireplumber libspa-0.2-bluetooth
sudo apt install pnpm
sudo apt install pulseaudio pulseaudio-module-bluetooth
sudo apt install python3.11-venv
sudo apt install python3.13-venv
sudo apt install remmina
sudo apt install rsync
sudo apt install screenfetch
sudo apt install software-properties-common
sudo apt install ssh
sudo apt install ssh-copy-id
sudo apt install terraform
sudo apt install testdisk
sudo apt install testdisk  
sudo apt install ufw
sudo apt install ufw -y
sudo apt install vim
sudo apt install vim -y 
sudo apt install virtualbox-7.1 linux-headers-$(uname -r) -y
sudo apt install vlc
sudo apt install xdg-desktop-portal-kde
sudo apt install xfce4 xfce4-goodies
sudo apt install xpad
sudo apt install xrdp -y
sudo apt installs python3.12-venv  -y
sudo apt purge adb
sudo apt purge kazam
sudo apt purge pm2
sudo apt purge scrcpy
sudo apt purge virtualbox*
sudo apt purge virtualbox-7.1
sudo apt purge xpad
sudo apt remove
sudo apt remove --purge 'mariadb-*' 'galera-*' -ysudo rm -f /etc/apt/sources.list.d/mariadb.listsudo apt autoremove -ysudo apt update
sudo apt remove --purge 'mariadb-*' 'galera-*' -ysudo rm -rf /etc/mysql /var/lib/mysql /var/log/mysql*
sudo apt remove --purge firefox -y
sudo apt remove --purge open-vm-tools open-vm-tools-desktop -ysudo apt autoremove -y
sudo apt search brave
sudo apt up
sudo apt update
sudo apt update 
sudo apt update && sudo apt full-upgrade -ysudo apt install -y dirmngr ca-certificates software-properties-common apt-transport-https curlcurl -fSsL https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo gpg --dearmor | sudo tee /usr/share/keyrings/oracle-virtualbox-2016.gpg > /dev/null
sudo apt update && sudo apt install nfs-kernel-server nfs-common -y
sudo apt update && sudo apt upgrade -y
sudo apt update && sudo apt upgrade -ysudo do-rel
sudo apt update && sudo apt upgrade -ysudo do-release-upgrade
sudo apt update && upgrade
sudo apt updatesudo apt full-upgrade
sudo apt updatesudo apt install -y software-properties-common curl apt-transport-https gnupg2 ca-certificates
sudo apt updatesudo apt install ansible -y
sudo apt updatesudo apt install awscli -y
sudo apt updatesudo apt install bluetooth bluez bluez-tools blueman
sudo apt updatesudo apt install build-essential linux-headers-$(uname -r) -y
sudo apt updatesudo apt install cloudflared
sudo apt updatesudo apt install dirmngr software-properties-common apt-transport-https ca-certificates curl -ycurl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | sudo bashsudo apt update
sudo apt updatesudo apt install docker-compose-plugin
sudo apt updatesudo apt install kazam
sudo apt updatesudo apt install linux-headers-$(uname -r)
sudo apt updatesudo apt install lvm2
sudo apt updatesudo apt install mariadb-server mariadb-client -y
sudo apt updatesudo apt install nfs-kernel-server nfs-common
sudo apt updatesudo apt install nginx
sudo apt updatesudo apt install nginx -y
sudo apt updatesudo apt install open-vm-tools open-vm-tools-desktop -y
sudo apt updatesudo apt install openssh-server
sudo apt updatesudo apt install pinta
sudo apt updatesudo apt install pkexec
sudo apt updatesudo apt install policykit-1
sudo apt updatesudo apt install python3-pip
sudo apt updatesudo apt install python3-virtualenv
sudo apt updatesudo apt install python3.7 python3.7-venv
sudo apt updatesudo apt install terraform
sudo apt upgrade
sudo apt upgrade -y
sudo apt-get autoremove
sudo apt-get install chromium-browser
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo apt-get install ghostty
sudo apt-get install kitty
sudo apt-get install ranger
sudo apt-get install tmux
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get updatesudo apt-get install ./docker-desktop-amd64.deb
sudo apt-get updatesudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
sudo apt-get updatesudo apt-get install azure-cli
sudo apt-get updatesudo apt-get install ca-certificates curl gnupg lsb-release
sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.ascsudo chmod a+r /etc/apt/keyrings/docker.asc
sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.ascsudo chmod a+r /etc/apt/keyrings/docker.asc
sudo apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'echo "deb [arch=amd64,arm64,ppc64el] http://mirror.mariadb.org/repo/10.6/ubuntu focal main" | sudo tee /etc/apt/sources.list.d/mariadb.listsudo apt update
sudo apt-mark showhold
sudo bash install_7.0_en.sh
sudo cal
sudo cat /etc/ansible/host
sudo cat /etc/ansible/hosts
sudo cat /etc/group
sudo cat /etc/group|grep kumar
sudo cat /etc/shadow
sudo cat /home/janak/.ssh/jen-jenkins.pem
sudo cat /proc/cpuinfo
sudo cat /proc/meminfo
sudo cat /var/log/mariadb/mariadb.log | tail -n 30
sudo cat /var/log/mysql/error.log | tail -n 30
sudo cat boot.log
sudo cat jenkins.key
sudo cat ~/.ssh/jan-jenkins.pem
sudo cd -D /root/.local/share/Trash/
sudo cd /etc/docker
sudo cd /etc/docker/
sudo cd /etc/nginx/sites-available/node-app /etc/nginx/sites-enabled
sudo cd /root/.local/share/Trash/
sudo cd /var/lib/docker/
sudo cd /var/lib/docker/volumes/jenkins_home/_data
sudo cd docker
sudo chmod +x /usr/local/bin/
sudo chmod +x rustdesk-1.4.2-x86_64.deb
sudo chmod +x zsh_setup.sh
sudo chmod -R u+rwx /media/king/GET/
sudo chmod -R u+rwx /media/king/GET/Course/Maximilian Schwarzmüller/[Update 4-2024] Understanding TypeScript/
sudo chmod -R u+rwx /media/king/GET/Course/Maximilian Schwarzmüller/[Update 4-2024] Understanding TypeScript/02 - TypeScript Basics & Basic Types
sudo chmod 400 "devops_key.pem"
sudo chmod 400 "jan-jenkins.pemssh -i "jan-jenkins.pem" ubuntu@ec2-3-88-51-147.compute-1.amazonaws.com
sudo chmod 400 hello.pem
sudo chmod 400 jan-jenkins.pem  
sudo chmod 400 terraform-janak.pem
sudo chmod 777 "app.py" "requirements.txt"
sudo chmod 777 /home/janak/Desktop/shared-nfs/ 
sudo chown -R $USER:$USER /media/king/GET/
sudo chown -R mysql:mysql /var/lib/mysql
sudo chown -R www-data:www-data /var/www/html/sudo chmod -R 755 /var/www/html/
sudo chown nobody:nogroup /home/janak/Desktop/shared-nfs/
sudo cloudflared service install
sudo cp syncthing /usr/local/bin
sudo curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg
sudo deluser --remove-home evening
sudo deluser --remove-home kumar
sudo df -ah
sudo docker build -t astropaper .
sudo docker build -t django-todo-app .
sudo docker build -t my-flask-app .
sudo docker compose down -v
sudo docker compose up --build -d
sudo docker compose up -d
sudo docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
sudo docker images
sudo docker login
sudo docker logs -f nginx-hero
sudo docker ps
sudo docker ps -a
sudo docker pull hello-world
sudo docker pull jenkins/jenkins:lts
sudo docker pull nginx
sudo docker push  janak0ff/my-flask-app
sudo docker rm $(docker ps -aq)
sudo docker rm 1bdbf424dc5e
sudo docker rm 9fd546952eac
sudo docker rm a830707172e8
sudo docker rm f55b31c080c2
sudo docker rm jenkins
sudo docker rmi  jenkins/jenkins
sudo docker rmi -V jenkins/jenkins
sudo docker rmi -v jenkins/jenkins
sudo docker rmi a830707172e8
sudo docker rmi hello-world
sudo docker rmi jenkins/jenkins:lts-jdk21sudo docker rmi jenkins/jenkins:lts
sudo docker rmi nginx
sudo docker rmi nginx:latest
sudo docker run -d -p 5000:5000 my-flask-app
sudo docker run -d -p 7777:7777 django-todo-app
sudo docker run -d -p 8080:80 nginx
sudo docker run -d -p 8080:8080 -p 50000:50000 \  --name jenkins \  -v jenkins_home:/var/jenkins_home \  jenkins/jenkins:lts
sudo docker run -d \  --name jenkins \  -p 8080:8080 -p 50000:50000 \  -v ~/jenkins_home:/var/jenkins_home \  jenkins/jenkins:lts
sudo docker run -d \  -p 8080:8080 -p 50000:50000 \  -v ~/jenkins_home:/var/jenkins_home \  --name jenkins \  jenkins/jenkins:lts-jdk21
sudo docker run -it --name nginx-hero -p 80:80 -d nginx
sudo docker run hello-world
sudo docker search jenkins
sudo docker start jenkins
sudo docker stop $(docker ps -aq)
sudo docker stop $(docker ps -aq)docker rm $(docker ps -aq)
sudo docker stop 24bfc78139d1
sudo docker stop jenkins
sudo docker tag my-flask-app janak0ff/my-flask-app
sudo docker volume create jenkins_home
sudo docker-compose down -v
sudo dpkg -i anydesk_7.1.0-1_arm64.deb
sudo dpkg -i code_1.100.2-1747260578_amd64.deb
sudo dpkg -i code_1.104.0-1757488003_amd64.deb
sudo dpkg -i minikube_latest_amd64.deb
sudo dpkg-reconfigure mariadb-server
sudo echo "flask" > requirements.txt
sudo export PATH="/usr/local/bin/terraform:$PATH"
sudo exportfs -ra
sudo exportfs -rasudo systemctl restart nfs-kernel-server
sudo exportfs -v
sudo find / -type d -name devops 2>/dev/null
sudo find /var -type d -name "logs"
sudo find /var/log -type f -iname "*mariadb*" | xargs sudo tail -n 30
sudo find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf
sudo find /var/log -type f -regex ".*\.gz$" | xargs rm -Rffind /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf
sudo galera_new_cluster
sudo galera_new_cluster 
sudo gpasswd -d kumar evening
sudo grep "menuentry '" /boot/grub/grub.cfg | less
sudo inxi -Fxz
sudo ip addr
sudo journalctl
sudo journalctl -xeu apache2.service
sudo journalctl -xeu mariadb --no-pager | tail -n 20
sudo journalctl | grep "error" > found_lines.txt
sudo killall -USR1 systemd-resolvedsudo journalctl -u systemd-resolved > ~/dns_cache.txtless ~/dns_cache.txt
sudo killall -USR1 systemd-resolvedsudo journalctl -u systemd-resolved | grep "CACHE:"
sudo kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0
sudo kwriteconfig5 --file kscreenlockerrc --group Daemon --key ScaleFactor 1kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0rm ~/.config/kscreenlockerrcrm ~/.local/share/kscreen/*
sudo lazydocker
sudo less -N 20 boot.log
sudo ln -s /etc/nginx/sites-available/jenkins /etc/nginx/sites-enabled/sudo nginx -tsudo systemctl reload nginx
sudo ln -s /etc/nginx/sites-available/jenkins.conf /etc/nginx/sites-enabled/
sudo lsof -i :80
sudo lsof -i :8080
sudo lsof -i :8888
sudo mariadb -u janak -p elearn < elearn.sql
sudo mariadb -u root -p
sudo mariadb-secure-installation
sudo mkdir -p /etc/cloudflaredsudo nano /etc/cloudflared/config.yml
sudo mkdir -p /etc/mysql/conf.dsudo mkdir -p /etc/mysql/mariadb.conf.dsudo mkdir -p /run/mysqldsudo chown mysql:mysql /run/mysqldsudo chmod 755 /run/mysqld
sudo mkdir -p /etc/mysql/percona-xtradb-cluster.conf.d/
sudo mkdir -p /etc/nginx/ssl
sudo mkdir -p /exports/{data,home,documents}sudo chown -R nobody:nogroup /exports
sudo mkdir -p /home/janak/Desktop/shared-nfs/sudo chown nobody:nogroup /home/janak/Desktop/shared-nfs/  # For open accesssudo chmod 777 /home/janak/Desktop/shared-nfs/             # Everyone can read/write
sudo mkdir -p /shared/{data,documents}sudo chown -R nobody:nogroup /shared
sudo mkdir -p /srv/nfs/sharedsudo chown nobody:nogroup /srv/nfs/shared   # For Ubuntu/Debiansudo chmod 755 /srv/nfs/shared
sudo mkdir -p /srv/nfs/sharedsudo chown nobody:nogroup /srv/nfs/sharedsudo chmod 777 /srv/nfs/shared
sudo mkdir -p /var/lib/mysql /etc/mysql/conf.d /etc/mysql/mariadb.conf.d /run/mysqldsudo chown -R mysql:mysql /var/lib/mysql /run/mysqldsudo mysql_install_db --user=mysql --ldata=/var/lib/mysqlsudo systemctl restart mariadb
sudo mkdir /var/lib/mysql
sudo mkdir ansible
sudo mkdir devtemp
sudo mkdir hosts
sudo mkdir my-docker-appcd my-docker-app
sudo mkdir terraform
sudo mount --bind /home /exports/homesudo mount --bind /shared/data /exports/datasudo mount --bind /shared/documents /exports/documents
sudo mv /var/lib/mysql /var/lib/mysql_BAK
sudo mv kubectl /usr/local/bin/
sudo mv lazydocker /usr/local/bin
sudo mv lazygit /usr/local/bin
sudo mv lazynpm /usr/local/bin
sudo mv scrcpy adb /usr/local/bin/
sudo mv scrcpy-server /usr/local/bin/
sudo mv ~/Downloads/terraform/ ~/bin/
sudo mv ~/Downloads/terraform/terraform /usr/local/bin/
sudo mysql -u root -p
sudo mysql_secure_installation
sudo nala install npm
sudo nala npm
sudo nala update
sudo nala update 
sudo nano /etc/ansible/hosts
sudo nano /etc/apache2/sites-available/wp.conf
sudo nano /etc/cloudflared/config.yml
sudo nano /etc/default/nfs-common
sudo nano /etc/default/nfs-kernel-server
sudo nano /etc/docker/daemon.json
sudo nano /etc/exports
sudo nano /etc/host/
sudo nano /etc/hosts
sudo nano /etc/mysql/conf.d/galera.cnf
sudo nano /etc/mysql/conf.d/galera.cnf\\n
sudo nano /etc/mysql/my.cnf
sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
sudo nano /etc/nginx/sites-available/jenkins
sudo nano /etc/nginx/sites-available/jenkins.conf
sudo nano Dockerfile
sudo nano app.py
sudo nano docker-compose.yml
sudo nano main.tf
sudo nano outputs.tf
sudo nano requirements.txt
sudo nano variables.tf
sudo nano wp-config.php
sudo nano ~/.local/share/applications/ghostty.desktop
sudo netstat -tulpn
sudo netstat -tulpn | grep :80
sudo netstat -tulpn | grep :8080
sudo netstat -tulpn | grep :8888
sudo netstat -tulpn | grep zabbix
sudo nginx -t
sudo nmtui
sudo npm cache clean --force
sudo npm install -g typescript
sudo ntfsfix /dev/sdXn
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/jenkins.key -out /etc/nginx/ssl/jenkins.crt
sudo percona-release setup pxc80sudo apt install percona-xtradb-cluster -y
sudo photorec
sudo ps aux | grep nginx
sudo pvcreate /dev/sda1
sudo pvdisplay
sudo pvs
sudo python3 -m ensurepip --default-pip
sudo reboot
sudo removeuser kumar
sudo resolvectl show-cache
sudo rm -f /usr/local/bin/kubectl
sudo rm -f /var/run/mysqld/*
sudo rm -f default jenkins
sudo rm -f jenkins_data
sudo rm -rf *
sudo rm -rf /etc/vmware*sudo rm -rf /usr/lib/vmware*sudo rm -rf /usr/bin/vmware*sudo rm -rf /usr/share/doc/*vmware*sudo rm -rf /usr/share/applications/vmware*
sudo rm -rf /etc/vmware*sudo rm -rf /usr/lib/vmware*sudo rm -rf /usr/share/doc/*vmware*sudo rm -rf /usr/bin/vmware*sudo rm -rf /usr/share/applications/vmware*
sudo rm -rf /etc/vmware*sudo rm -rf /usr/lib/vmware*sudo rm -rf /usr/share/doc/*vmware*sudo rm -rf /usr/share/applications/vmware*
sudo rm -rf /etc/vmware*sudo rm -rf /usr/lib/vmware*sudo rm -rf /usr/share/doc/*vmwaresudo rm -rf /usr/bin/vmware-usbarbitratorsudo rm -rf /usr/bin/vmnet*sudo rm -rf /usr/bin/vmware*sudo rm -rf /usr/share/applications/vmware*
sudo rm -rf db_data wordpress_data
sudo rm -rf jenkins_data
sudo rm -rf my-docker-app
sudo rm -rf recup*
sudo rm -rf terraform
sudo rm -rf ~/.config/* ~/.local/* ~/.cache/*
sudo rm -rf ~/.config/plasma* ~/.config/k* ~/.config/kwin* ~/.config/kscreen* ~/.config/dolphin* ~/.config/kde* ~/.cache/* ~/.local/share/kscreen ~/.local/share/kxmlgui5 ~/.local/share/plasma*
sudo rm 1bdbf424dc5e
sudo rm hosts
sudo rm index.html index.nginx-debian.html
sudo rm ~/.config/kscreenlockerrcrm -rf ~/.local/share/kscreen/
sudo rm ~/.config/plasma-org.kde.plasma.desktop-appletsrckillall plasmashellkstart5 plasmashell
sudo rmdir hosts
sudo rmi hello-world
sudo service nginx stop
sudo sh -c 'curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | gpg --dearmor --yes > /etc/apt/trusted.gpg.d/debian.griffo.io.gpg'
sudo ss -tulpn | grep -E '2049|111'
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@172.16.25.150
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.100
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.135
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.136
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.138
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.63.132
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub kumar@192.168.253.138
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub lun@10.10.130.200
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub lun@98.70.33.180
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub luniox@98.70.33.180
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.134
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.210
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.235
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.27
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.30
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.32
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.34
sudo ssh-copy-id janak@192.168.253.100
sudo ssh-keygen -f "/root/.ssh/known_hosts" -R "202.51.74.134"
sudo su
sudo systemctl disable nginx
sudo systemctl enable --now nfs-server
sudo systemctl enable apache2sudo systemctl start apache2
sudo systemctl enable docker
sudo systemctl enable nginx
sudo systemctl is-enabled nfs-serversudo systemctl status nfs-server
sudo systemctl list-units --type=service |grep running
sudo systemctl reload  nfs-kernel-server
sudo systemctl restart docker
sudo systemctl restart mariadb
sudo systemctl restart nfs-server
sudo systemctl restart nginx
sudo systemctl start apache2
sudo systemctl start apache2sudo systemctl enable apache2
sudo systemctl start apparmor
sudo systemctl start bluetooth
sudo systemctl start docker
sudo systemctl start mariadb
sudo systemctl start mysql 
sudo systemctl start mysql@bootstrap
sudo systemctl start nginx
sudo systemctl status apache2 -l --no-pager
sudo systemctl status bluetooth
sudo systemctl status docker
sudo systemctl status mariadb
sudo systemctl status mysql
sudo systemctl status nfs-kernel-server
sudo systemctl status nginx
sudo systemctl status ssh
sudo systemctl stop apache2.service
sudo systemctl stop apparmor
sudo systemctl stop mariadb
sudo systemctl stop mariadb.service
sudo systemctl stop mysql
sudo systemctl stop mysql 
sudo systemctl stop mysqlsudo rm -f /var/lib/mysql/grastate.datsudo systemctl stop mysqlsudo rm -f /var/lib/mysql/grastate.dat
sudo systemctl stop mysqlsudo systemctl stop mysql
sudo systemctl stop nfs
sudo systemctl stop nginx
sudo systemctl stop nginxsudo systemctl disable nginxsudo systemctl mask nginx
sudo tar xf lazynpm_0.1.4_Linux_x86_64.tar.gz
sudo terraform -v
sudo terraform init
sudo terraform inti
sudo terraform plan
sudo testdisk
sudo touch app.py
sudo ufw allow 22/tcpsudo ufw reload
sudo ufw allow 3306/tcpsudo ufw allow 4567/tcpsudo ufw allow 4567/udpsudo ufw allow 4568/tcpsudo ufw allow 4444/tcp
sudo ufw allow 3389/tcp
sudo ufw allow from 192.168.1.0/24 to any port nfs
sudo ufw allow from 192.168.10.0/24 to any port nfs
sudo ufw allow sshsudo ufw enable
sudo ufw enable
sudo ufw reloadsudo ufw status
sudo ufw starus
sudo ufw status
sudo ufw status verbose
sudo umount /media/janak/GET
sudo update-alternatives --config java    # Debian-basedjava -version
sudo usermod -a -G vboxusers $USER
sudo usermod -aG docker $USER
sudo usermod -aG docker $king
sudo usermod -aG docker janak
sudo usermod -aG docker king
sudo usermod -aG evening kumar
sudo vmware
sudo vmware-installer --uninstall-product vmware-workstation
sudo vmware-installer -l
sudo vmware-installer -u vmware-workstation
sudo vmware-modconfig --console --install-all
sudo ~/.ssh/id_rsa.pub
syncthing
syncthing --version
systemctl --user enable --now pipewire pipewire-pulse wireplumber
systemctl --user enable --now pipewire pipewire-pulse wireplumber xdg-desktop-portal
systemctl start docker
systemctl status bluetooth
systemctl status con
systemctl status nginx.service
systemctl status systemd-tmpfiles-clean.service
tC
tac config
tac coverage.txt
tail -n 14
tail -n 14 coverage.txt
tar -xvzf latest.tar.gzsudo mv wordpress/* /var/www/html/
tar -xvzf scrcpy-linux-x86_64-v3.3.2.tar.gz
tar -xvzf syncthing-linux-amd64-v1.29.7.tar.gz
tar xf lazydocker.tar.gz
tar xf lazygit.tar.gz
tar xzvf syncthing-linux-amd64-v2.0.9.tar.gz
telnet 103.90.86.220 22
telnet 103.90.86.220 80
telnet 103.90.86.220 8080
telnet 110.34.5.212 3389
telnet 172.22.27.155
telnet 172.22.27.155 3389
telnet 172.22.27.156 3389
telnet 192.168.1.64 22
telnet 202.51.74.117 22
telnet 202.51.74.210 3389
telnet 202.51.74.30
telnet 202.51.74.30 22
telnet 202.51.74.32 22
telnet 98.70.33.180 22
terraform  destroy
terraform  init
terraform  inti
terraform -v
terraform -version
terraform apply
terraform destroy
terraform fmt
terraform import azurerm_resource_group.example /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073/resourceGroups/example-resources
terraform import azurerm_resource_group.janakaws /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073/resourceGroups/Janak-res
terraform init
terraform initterraform apply
terraform initterraform planterraform apply
terraform output
terraform output instance_public_ip
terraform plan
terraform planterraform apply
terraform refresh
terraform refreshterraform output
terraform show
terraform state list
terraform validate
terraform version
tmux
tmux attach
tmux kill-server
touch Dockerfile
touch app.py
touch janak.txt
touch main.tf
tree
tree -d
tsc
tsc --init
tsc -w
tsc app.ts
tsc init
udo mkdir -p /home/janak/Desktop/shared-nfs/udo chown nobody:nogroup /home/janak/Desktop/shared-nfs/  # For open accesssudo chmod 777 /home/janak/Desktop/shared-nfs/  
ufw -v
ufw -version
uname -ahostnamectl
uname -r
update-desktop-database ~/.local/share/applications/
url -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
vim
vim .zshrc
vim config
vim conn
vim jenkinsv1
vim tmux.conf
virtualenv -p python3.11 env
virtualenv -p python3.7 env
vmware-installer -l
vmware-installer -u vmware-workstation
w
wget
wget --recursive \     --no-clobber \     --page-requisites \     --html-extension \     --convert-links \     --restrict-file-names=windows \     --domains w3schools.com \     --no-parent \     https://www.w3schools.com/nodejs/
wget --recursive \     --no-clobber \     --page-requisites \     --html-extension \     --convert-links \     --restrict-file-names=windows \     --domains w3schools.com \     --no-parent \     https://www.w3schools.com/typescript/
wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.debsudo dpkg -i cloudflared-linux-amd64.deb
wget https://raw.githubusercontent.com/janak0ff/zsh/main/.zsh_history
wget https://raw.githubusercontent.com/janak0ff/zsh/main/setup_zsh.sh
wget https://repo.percona.com/apt/percona-release_latest.generic_all.debsudo dpkg -i percona-release_latest.generic_all.deb
wget https://wordpress.org/latest.tar.gz
which adduser
which cd
which ip
which ls
which mariadb-secure-installation
which mysql_secure_installation
which pipewirels -l /usr/bin/pipewire # Or wherever `which` points
which pythonpython --version
which scrcpy
whoami
xrandr --output <DISPLAY> --scale 1x1
yazi
yes hellow
yn
{    cat ~/.zsh_history ~/server_zsh_history} | \awk '    /\\$/ {        sub(/\\$/, "")        printf "%s", $0        next    }    { print }' | \LC_ALL=C sort -u > ~/.zsh_history_merged
~/.ssh/id_rsa.pub
~/Downloads/scrcpy-linux-x86_64-v3.3.2 > adb deviceszsh: command not found: adb~/Downloads/scrcpy-linux-x86_64-v3.3.2 > 
