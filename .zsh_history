git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autocomplete\

source ~/.zshrc\

sudo apt instal
source ~/.zshrc\

git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\

git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\

source ~/.zshrc\

chsh -s $(which zsh)\

sudo apt upgrade
sudo apt remove
sudo apt autoremove\
sudo apt autoclean\

sudo apt clean\

rm -rf ~/.cache/thumbnails/*\

n
rm -rf ~/.cache/thumbnails/*\

logs=$(find /var/log -type f)\
for i in $logs; do > $i; done\

find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf\
find /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf\

sudo find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf\
find /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf\

uname -r\

dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1 | xargs sudo apt-get -y purge\

rm -rf /home/*/.local/share/Trash/*/**\
rm -rf /root/.local/share/Trash/*/**\

snap list\

code .
git clone git@github.com:janak0ff/E-Commerce-Data-Rendering-RTK-IBM.git
git clone https://github.com/janak0ff/Feedback-Form-for-Survey-IBM.git
git clone git@github.com:janak0ff/Feedback-Form-for-Survey-IBM.git
git clone git@github.com:janak0ff/Fetch-Data-Using-useFetch-IBM.git
git clone git@github.com:janak0ff/Todo-List-Application-IBM.git
git clone git@github.com:janak0ff/Event-Planner-IBM.git
git clone git@github.com:janak0ff/Tanstack-Query---Learn.git
git clone git@github.com:janak0ff/Content-Rating--IBM.git
sudo apt install jupyterlab
code .
npm start
node -v
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
\. "$HOME/.nvm/nvm.sh"
nvm install 22
\
# Verify the Node.js version:\
node -v # Should print "v22.14.0".\
nvm current # Should print "v22.14.0".\
# Verify npm version:\
npm -v # Should print "10.9.2".
code .
npm start
code .
git config --global user.email "janakkrshrestha@gmail.com"\
git config --global user.name "Janak kr Shrestah"\

git push
code .
npm start
code .
npm i
npm start
npm run dev
git push origin main
npm i
code .
npm run dev
git push origin main
npm i
code .
npm run dev
git push origin main
npm i
npm run dev
code .
git push origin main
npm i
code .
npm run dev
git push origin main
npm i
code .
npm run dev
code .
npm run dev
git push origin main
htop
cd frontend
code .
git push origin main
sudo apt update
sudo apt upgrade
sudo apt install copyq
sudo apt autoremove\
sudo apt autoclean\

sudo apt install adb scrcpy
adb
clear
adb
adb devices
scrcpy
adb devices
scrcpy
adb tcpip 5525
adb tcpip 5555
adb connect 192.168.1.90
scrcpy
scrcpy --audio-source=playback
scrcpy
sudo apt purge scrcpy
sudo apt purge adb
adb tcpip 5555\

adb
sudo apt install adb
adb tcpip 5555\

sudo apt purge adb
# for Debian/Ubuntu\
sudo apt install ffmpeg libsdl2-2.0-0 adb wget \\
                 gcc git pkg-config meson ninja-build libsdl2-dev \\
                 libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \\
                 libswresample-dev libusb-1.0-0 libusb-1.0-0-dev
git clone https://github.com/Genymobile/scrcpy\
cd scrcpy\
./install_release.sh
scrcpy
adb tcpip 5555\

adb connect 192.168.1.90:5555
scrcpy
adb tcpip 5555\

adb
adb tcpip 5555\

adb connect 192.168.1.90:5555
scrcpy
clear
adb tcpip 5555\

adb connect 192.168.1.90:5555
scrcpy
code .
sudo apt update
sudo apt autoremove\
sudo apt autoclean\

cd frontend
npm run dev
npm start
npm i
npm start
git push origin main
cd frontend
npm start
code .
npm start
git push origin main
code .
cd frontend
npm start
git push origin main
dpkg-query -W --showformat='${Installed-Size}\t${Package}\n' | sort -nr | awk '{printf "%-10s %s MB\n", $1/1024, $2}'\

code .
cd frontend
npm start
git push origin main
sudo apt autoremove\
sudo apt autoclean
sudo apt clean
rm -rf ~/.cache/thumbnails/*
yn
rm -rf ~/.cache/thumbnails/*
	logs=$(find /var/log -type f)\
for i in $logs; do > $i; done
find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf\
find /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf
uname -r
dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-\
9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1 |\
xargs sudo apt-get -y purge
rm -rf /home/*/.local/share/Trash/*/**\
rm -rf /root/.local/share/Trash/*/**
[200~snap list~
snap list
sudo apt update && upgrade
sudo apt upgrade
code .
npm run dev
npm i
npm run dev
git clone git@github.com:janak0ff/Wild-Oasis.git
code .
npm i
code .
npm i
npm run dev
code .
npm run dev
sudo apt install vlc
npm run dev
code .
npm run dev
git push origin main
code .
npm run dev
sudo add-apt-repository ppa:obsproject/obs-studio
sudo apt install obs-studio
scrcpy
adb tcpip 5555\

adb connect 192.168.1.90:5555
scrcpy
adb tcpip 5555\

adb connect 192.168.1.90:5555
scrcpy
scrcpy --max-size 1280\

scrcpy --max-size 1920 --bit-rate 8M\

scrcpy --max-size 1920 --video-bit-rate 8M
scrcpy --max-size 1080 --video-bit-rate 6M
scrcpy
clear
scrcpy
scrcpy -d
scrcpy
scrcpy -e
scrcpy --max-size 1080 --bit-rate 16M --turn-screen-off\

scrcpy --max-size 1080 --video-bit-rate 20M --turn-screen-off --fullscreen\

scrcpy --max-size --video-bit-rate 20M  --fullscreen
scrcpy --max-size 1920   --video-bit-rate 20M  --fullscreen
scrcpy --max-size 1920   --video-bit-rate 20M  --fullscreen --record=file.mp4
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen 
----record=file.mp4
--record=file.mp4
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen 
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen  --stay-awake
code .
npm install -g typescript
sudo npm install -g typescript
npm install -g typescript
tsc
sudo chown -R $USER:$USER /media/king/GET/\

git clone https://github.com/janak0ff/Understanding-Typescript.git
code .
git clone https://github.com/janak0ff/Understanding-Typescript.git
code .
cd TypeScript Basics & Basic Types
ls
code .
npm i
npm start
tsc app.ts
code .
cd TypeScript\ Basics\ \&\ Basic\ Types
sudo chmod -R u+rwx /media/king/GET/
sudo chmod -R u+rwx /media/king/GET/Course/Maximilian Schwarzm√ºller/[Update 4-2024] Understanding TypeScript/02 - TypeScript Basics & Basic Types\

sudo chmod -R u+rwx /media/king/GET/Course/Maximilian Schwarzm√ºller/[Update 4-2024] Understanding TypeScript/\

sudo ntfsfix /dev/sdXn\

sudo ntfsfix /dev/sdXn
code .
cd TypeScript\ Basics\ \&\ Basic\ Types
tsc app.ts
npm start
code .
npx create-next-app@latest
code .
npx create-next-app@14 the-wild-oasis-web
code .
npm run dev
git push origin main
code .
npm run dev
code .
npm run dev
npm install @heroicons/react
git push origin main
code .
npm run dev
code .
npm run dev
npm i date-fns
npm i heroicons
npm run dev
git clone git@github.com:janak0ff/janak0ff.github.io.git
code .
git push origin main
code .
tsc app.ts
tC
tsc app.ts
cd TypeScript\ Basics\ \&\ Basic\ Types
tsc app.ts
code .
clear
code .
clear
npm run dev
git push origin main
ls
echo $SHELL
ls
lsa
clear
code .
npm run dev
adb tcpip 5555\

scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen  --stay-awake
adb tcpip 5555
adb connect 192.168.1.90:5555
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen  --stay-awake
adb tcpip 5555
adb connect 192.168.1.80: 555
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen  --stay-awake
adb connect 192.168.1.80:5555
scrcpy --max-size 1920 --video-bit-rate 16M --fullscreen  --stay-awake
git clone git@github.com:janak0ff/janak0ff.github.io.git
code .
git push origin main
code .
npm run dev
npm i @supabase/supabase-js
npm run dev
clear
npm run dev
code .
git push origin main
code .
npm run dev
git push origin main
npm run dev
code .
docker pull ja7adr/w3schools\

wget
wget --recursive \\
     --no-clobber \\
     --page-requisites \\
     --html-extension \\
     --convert-links \\
     --restrict-file-names=windows \\
     --domains w3schools.com \\
     --no-parent \\
     https://www.w3schools.com/typescript/\

wget --recursive \\
     --no-clobber \\
     --page-requisites \\
     --html-extension \\
     --convert-links \\
     --restrict-file-names=windows \\
     --domains w3schools.com \\
     --no-parent \\
     https://www.w3schools.com/nodejs/
code .
npm run dev
code .
clear
npm run dev
git push origin main
code .
git push origin main
code .
npm run dev
git push origin main
code .
npm run dev
npm i
npm run dev
git push origin main
code .
cd 
cd TypeScript\ Basics\ \&\ Basic\ Types
tsc app.ts
npm start
cd TypeScript\ Basics\ \&\ Basic\ Types
npm start
tsc app.ts
git push origin main
code .
clear
npm run dev
git push origin main
code .
npm run dev
git push origin main
code .
cd The TypeScript Compiler
cd The\ TypeScript\ Compiler
npm i
tsc init
tsc --init
npm start
tsc -w
cd The\ TypeScript\ Compiler
npm start
tsc -w
git push origin main
code .
git push origin main
code .
npm run dev
git push origin main
code .
npm run dev
npm run build
npm run dev
npm run build
code .
npm run dev
clear
git push origin main
npm run dev
code .
npm run prod
npm run dev
git push origin main
sudo apt update 
sudo apt upgrade
clear
code .
npm run dev
clear
npm run defv
npm run dev
sudo apt upgrade
sudo apt update
sudo apt install open-vm-tools open-vm-tools-desktop -y
reboot
sudo apt update\
sudo apt install open-vm-tools open-vm-tools-desktop -y\

open-vm-tools
sudo apt install build-essential linux-headers-$(uname -r)
cd Downloads
ls
sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
sudo apt remove --purge open-vm-tools open-vm-tools-desktop -y\
sudo apt autoremove -y\

ping google.com
clear
ls -;
ls -l
cd /
ls -l
ls -la
cd Downloads
ls
cd bin
cd
cd -
adduser kumar
sudo adduser kumar
which adduser
cd /
ls
cd home
ls
sudo cat /etc/group|grep kumar
su kumar
htop
journalctl
systemctl status nginx.service
sudo apt -S nginx\

systemctl status nginx.service
sudo apt update\
sudo apt install nginx\

systemctl status nginx.service
sudo apt update\
sudo apt install nginx\

systemctl status nginx.service
cd /usr/lib/systemd
cd ~
sudo mkdir devtemp
sudo apt install vim
cd /etc/netplan/
cd /
nmtui
sudo ufw starus
sudo ufw status
htop
ls
sudo -i
,s
ls
mkdir janakkk
touch janak.txt
htop
htop 5
htop 
code .
npm run dev
htop
npm run dev
code .
npm run dev
clear
npm run dev
npm start
npm i
npm run dev
code .
clear
npm run dev
sudo apt update
sudo apt upgrade
sudo resolvectl show-cache
sudo killall -USR1 systemd-resolved\
sudo journalctl -u systemd-resolved | grep "CACHE:"
sudo killall -USR1 systemd-resolved\
sudo journalctl -u systemd-resolved > ~/dns_cache.txt\
less ~/dns_cache.txt
sudo apt autoremove\
sudo apt autoclean
cd /var/cache/apt/archives
cd -
sudo apt clean
cd /cache
cd /.cache
cd ~
cd .cache
rm -rf ~/.cache/thumbnails/*
cd ..
rm -rf ~/.cache/thumbnails/*
less /path/to/your/large_log_file.log
cd /var/log
ls -la
uname -r
dpkg -l | grep linux-image
cd /
ls /boot/vmlinuz-*\
ls /boot/initrd.img-*\
ls /boot/config-*
grep "menuentry '" /boot/grub/grub.cfg | less
sudo grep "menuentry '" /boot/grub/grub.cfg | less
dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-\
9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1 |\
xargs sudo apt-get -y purge
dpkg -l | grep linux-image
sudo apt autoremove
dpkg -l | grep linux-image
CURRENT_KERNEL=$(uname -r)\
sudo apt remove $(dpkg -l | grep linux-image | awk '{print $2}' | grep -v "$CURRENT_KERNEL")\
sudo apt autoremove\
sudo update-grub
dpkg -l | grep linux-image
find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf\
find /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf
sudo find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf\
find /var/log -type f -regex ".*\.[0-9]$" | xargs rm -Rf
sudo find /var/log -type f -regex ".*\.gz$" | xargs rm -Rf
cd /root/.local/share/Trash/
sudo cd /root/.local/share/Trash/
sudo cd -D /root/.local/share/Trash/
rm -rf /home/*/.local/share/Trash/*/**\
rm -rf /root/.local/share/Trash/*/**
cd /var/log
ls
systemctl status systemd-tmpfiles-clean.service
cd /
sudo cd /root/.local/share/Trash/
sudo -s
sudo apt update
sudo apt install docker.io -y
sudo systemctl enable docker
sudo systemctl start docker
docker pull jenkins/jenkins:lts\

sudo docker pull jenkins/jenkins:lts\

mkdir -p ~/jenkins_home\
sudo chown -R 1000:1000 ~/jenkins_home\

docker run -d \\
  --name jenkins \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

sudo docker run -d \\
  --name jenkins \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

sudo docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword\

docker search jenkins\

sudo docker search jenkins\

	sudo apt install openjdk-21-jdk    # Debian/Ubuntu\
# OR\
sudo pacman -S jdk-openjdk         # Arch Linux (installs latest)\

sudo update-alternatives --config java    # Debian-based\
java -version\

docker run -d \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  --name jenkins \\
  jenkins/jenkins:lts-jdk21\

sudo docker run -d \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  --name jenkins \\
  jenkins/jenkins:lts-jdk21\

# Stop the old container\
docker stop jenkins\
\
# Remove it\
docker rm jenkins\
\
# Now re-run with Java 21 image\
docker run -d \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  --name jenkins \\
  jenkins/jenkins:lts-jdk21\

sudo docker stop jenkins
sudo docker rm jenkins
docker run -d \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  --name jenkins \\
  jenkins/jenkins:lts-jdk21
sudo docker run -d \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  --name jenkins \\
  jenkins/jenkins:lts-jdk21
cd Desktop
sudo docker stop jenkins
npm install pm2 -g\
pm2 start app.js\
pm2 save\
pm2 startup\

cd Desktop/node-app
npm install pm2 -g\
pm2 start app.js\
pm2 save\
pm2 startup\

hostname -I
sudo docker start jenkins
node app.js
sudo docker stop jenkins
sudo docker start jenkins
sudo apt install -y chromium-browser\

sudo apt-get install chromium-browser\

sudo docker stop jenkins
sudo apt install chromium
ping 35.175.195.51
sudo chmod 400 hello.pem
ssh -i hello.pem
ssh -v -i hello.pem ubuntu@54.210.240.249
sudo docker start jenkins
ping 54.89.204.89
ssh -i "janak.pem" ec2-user@ec2-54-89-204-89.compute-1.amazonaws.com
ssh -v -i jan-jenkins.pem ubuntu@3.88.51.147
chmod 400 "jan-jenkins.pem\
\
chmod 400 "jan-jenkins.pem
sudo chmod 400 "jan-jenkins.pem\
ssh -i "jan-jenkins.pem" ubuntu@ec2-3-88-51-147.compute-1.amazonaws.com\
\
\

ssh -i "jan-jenkins.pem" ubuntu@ec2-3-88-51-147.compute-1.amazonaws.com
ls
chmod 400 jan-jenkins.pem\

ssh -i "jan-jenkins.pem" ubuntu@ec2-3-88-51-147.compute-1.amazonaws.com\

ssh -i "jan-jenkins.pem" ubuntu@2-3-88-51-147
ssh -i "jan-jenkins.pem" ubuntu@ec2-3-88-51-147.compute-1.amazonaws.com\

cd .ssh
ssh -i devops-key janak0ff@4.242.192.92
ls
ssh -i devops_key janak0ff@4.242.192.92
chmod 400 devops_key.pem
ssh -i devops_key janak0ff@4.242.192.92
cd
ssh -i ~/.ssh/devops_key janak0ff@4.242.192.92
cd .ssh
ls
chmod 400 devops_key.pem
ls -l
ssh -i ~/.ssh/devops_key.pem janak0ff@4.242.192.92
node app.js
cd .ssh
cc
sudo apt install chromium
HTOP
htop
cd ~/.cache/google-chrome/Default/Cache
sudo rm -rf *
npm run dev
npm i
npm run dev
git clone git@github.com:janak0ff/WorldWise.git
npm i
npm run dev
cd frontend
npm start
git clone git@github.com:janak0ff/WorldWise.git
cd WorldWise
npm i
npm run dev
code .
npm start
sudo apt remove --purge firefox -y\

apt list --installed | less\

sudo apt autoremove
sudo apt autoclean
sudo apt clean
rm -rf ~/.cache/thumbnails/*
sudo photorec\

sudo apt install testdisk  
sudo testdisk\

ssh -i devops_key.pem janak0ff@4.242.192.92
ls
sudo chmod 400 "devops_key.pem"
ssh -i devops_key.pem janak0ff@4.242.192.92
npm install -g ngrok\

node app.js
ngrok http 3000\

ngrok config add-authtoken 2xGawLWOy4GtE59ztIFmOJPl18y_7SuhmTMcmt65ppHV4MQtW
ngrok http 3000\

ssh -i devops_key.pem janak0ff@4.242.192.92
docker ps
cd Documents
ls
ssh -i -v  devops_key.pem janak0ff@4.242.192.92
ssh -i -V devops_key.pem janak0ff@4.242.192.92
ssh -V -i devops_key.pem janak0ff@4.242.192.92
ssh -i devops_key.pem janak0ff@4.242.192.92
sudo apt update\
sudo apt install openssh-server\

sudo systemctl status ssh\

curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | \\
  sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && \\
  echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | \\
  sudo tee /etc/apt/sources.list.d/ngrok.list && \\
  sudo apt update && \\
  sudo apt install ngrok\

ngrok config 2xGawLWOy4GtE59ztIFmOJPl18y_7SuhmTMcmt65ppHV4MQtW
ngrok tcp 22\

docker ps
sudo  docker ps
systemctl status con
cd Desktop
cd ..
cd Documents
ssh -i devops_key.pem janak0ff@4.242.192.92
cd ~
sudo apt install docker.io -y
sudo docker pull nginx
sudo docker run -it --name nginx-hero -p 80:80 -d nginx
sudo docker ps -a
curl http://localhost:80
sudo docker logs -f nginx-hero
sudo apt install net-tools
ifconfig
mkdir Devops-Blogs
cd Devops-Blogs
npm create astro@latest\

cd devops-blogs
npm i
npm run dev\

sudo npm cache clean --force\

npm cache clean --force\

rm -rf node_modules package-lock.json\

npm install\

npx astro dev\

code .
npm run dev\

rm -rf node_modules package-lock.json\

cd ..
rm -rf 
npm create astro@latest -- --template satnaing/astro-paper
pnpm create astro@latest --template satnaing/astro-paper
npm install -g pnpm\

pnpm create astro@latest --template satnaing/astro-paper
pnpm install
code .
pnpm run dev
code .
pnpm run dev
code .
npm run dev\

git remote add origin https://github.com/janak0ff/devops-blog.git
git branch -M master
git push -u origin main
git push -u origin master
code .
git push -u origin main
git push -u origin master
code .
npm run dev\

git push -u origin master
code .
npm run dev\

git push -u origin master
pnpm run built
pnpm run build
git push -u origin master
sudo docker run -d \\
  --name jenkins \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

systemctl start docker
docker run -d \\
  --name jenkins \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

sudo docker run -d \\
  --name jenkins \\
  -p 8080:8080 -p 50000:50000 \\
  -v ~/jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

sudo docker ps -a
code .
npm run dev\

node app.js
ngrok http 3000
wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb\
sudo dpkg -i cloudflared-linux-amd64.deb\

cloudflared tunnel login\

cloudflared tunnel create mytunnel\

sudo mkdir -p /etc/cloudflared\
sudo nano /etc/cloudflared/config.yml\

sudo nano /etc/cloudflared/config.yml
cloudflared tunnel route dns mytunnel local.janakkumarshrestha0.com.np
cloudflared tunnel run mytunnel\

sudo nano /etc/cloudflared/config.yml
	cloudflared tunnel run mytunnel\

sudo nano /etc/cloudflared/config.yml
git push -u origin master
code .
npm run dev\

git push -u origin master
code .
node app.js
cloudflared tunnel route dns mytunnel local.janakkumarshrestha0.com.np
cloudflared tunnel run mytunnel
sudo cloudflared service install
node app.js
cloudflared tunnel run mytunnel\

cloudflared tunnel run mytunnel
node app.js
clear
code .
npm run dev\

git push -u origin master
curl wttr.in/casablanca
curl -s wttr.in/casablanca
clear
curl -s wttr.in/kathmandu
git push -u origin master
pnpm run build
git push -u origin master
cd Desktop
docker pull hello-world
sudo docker pull hello-world
docker images
sudo docker images
sudo docker run hello-world
sudo docker ps
docker ps
sudo docker ps
sudo docker ps -a
sudo rmi hello-world
sudo rm 1bdbf424dc5e
sudo docker rm 1bdbf424dc5e
sudo docker ps -a
sudo docker rmi hello-world
sudo docker images
sudo docker rm f55b31c080c2
sudo docker ps -a
sudo docker images
sudo docker rmi -v jenkins/jenkins
sudo docker rmi -V jenkins/jenkins
sudo docker rmi  jenkins/jenkins
sudo docker images
sudo docker rmi  jenkins/jenkins
sudo docker rmi jenkins/jenkins:lts-jdk21\
sudo docker rmi jenkins/jenkins:lts
sudo docker images
sudo docker rmi nginx
sudo docker rmi nginx:latest
sudo docker rm a830707172e8
sudo docker rmi a830707172e8
sudo docker rmi nginx
sudo docker ps -a
sudo docker rm 9fd546952eac
sudo docker images
sudo docker rmi a830707172e8
sudo docker run -d -p 8080:80 nginx
sudo lsof -i :8080
sudo docker stop $(docker ps -aq)\
docker rm $(docker ps -aq)
sudo docker stop $(docker ps -aq)
sudo docker rm $(docker ps -aq)
sudo lsof -i :8080
sudo systemctl stop nginx
sudo systemctl disable nginx
sudo service nginx stop
sudo ps aux | grep nginx
sudo docker ps -a
sudo docker images
sudo -i
clear
sudo mkdir my-docker-app\
cd my-docker-app
touch app.py
sudo touch app.py
sudo nano app.py
cat app.py
sudo echo "flask" > requirements.txt
cd ..
sudo rm -rf my-docker-app
ls
cd my-docker-app
sudo nano app.py
sudo nano requirements.txt
sudo echo "flask" > requirements.txt
sudo chmod 777 "app.py" "requirements.txt"
echo "flask" > requirements.txt
touch Dockerfile
sudo nano Dockerfile
sudo nano requirements.txt
sudo docker build -t my-flask-app .
sudo docker run -d -p 5000:5000 my-flask-app
sudo docker ps -a
sudo docker stop 24bfc78139d1
sudo docker ps
sudo docker login
docker tag my-flask-app janak0ff/my-flask-app
sudo docker tag my-flask-app janak0ff/my-flask-app
sudo docker images
sudo docker push  janak0ff/my-flask-app
git push -u origin master
sudo apt purge pm2
pm2
sudo systemctl status nginx
sudo cd /etc/nginx/sites-available/node-app /etc/nginx/sites-enabled
code .
cloudflared tunnel create ssh-tunnel\

nano /.cloudflared/config.yml
nano /etc/cloudflared/config.yml
sudo nano /etc/cloudflared/config.yml
node app.js
cloudflared tunnel route dns mytunnel local.janakkumarshrestha0.com.np\
cloudflared tunnel route dns mytunnel ssh.janakkumarshrestha0.com.np
cloudflared tunnel run mytunnel\

sudo nano /etc/cloudflared/config.yml
cloudflared tunnel route dns mytunnel local.janakkumarshrestha0.com.np\
cloudflared tunnel route dns mytunnel ssh.janakkumarshrestha0.com.np
cloudflared tunnel run mytunnel\

ssh -i devops_key.pem janak0ff@4.242.192.92
docker --version
sudo usermod -aG docker $USER
docker ps
docker images
sudo docker images
sudo usermod -aG docker $USER
docker images
docker pull jenkins/jenkins:lts
grep docker /etc/group
sudo usermod -aG docker king
docker images
sudo usermod -aG docker $king
docker images
grep docker /etc/group
docker images
docker pull jenkins/jenkins:lts
sudo systemctl status docker
sudo docker run -d -p 8080:8080 -p 50000:50000 \\
  --name jenkins \\
  -v jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts
hostname -I
sudo docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
sudo docker volume create jenkins_home
docker ps
code .
npm run dev\

docker ps
docker stop f265c5e98595
docker ps
cd /usr/share/application/
cd /usr/share/applications/
ls
cat google-chrome.desktop
cd /usr/bin/
ls -l
cd ..
ls
pwd
cd /
cd /opt
ls
cd ~
cat .profile
env
cd /opt
cd
sudo apt update
sudo apt upgrade
ps -a
ps -au
ps -aux
htop
curl wttr.in/manthali
clear
curl wttr.in/rasuwa
curl wttr.in/dubai
echo "hello"
sudo cat /etc/group
su - kumar
cd /home
ls
sudo removeuser kumar
sudo adduser evening
cat /etc/group | grep evening
cd
sudo usermod -aG evening kumar
cat /etc/group | grep evening
sudo gpasswd -d kumar evening
cd /home
cd
cd home | ls
cd /home | ls
cd /home
ls
sudo deluser --remove-home kumar
ls
sudo deluser --remove-home evening
ls
sudo cat /etc/shadow
cat /etc/passwd
ls -l
sudo nano /etc/host/
sudo nano /etc/hosts
cat /etc/resolv.conf
cal
sudo cal
sudo ip addr
htop
cat /proc/cpuinfo
sudo apt autoclean
sudo apt autoremove
sudo apt clean
htop
code .
ping 192.168.189.131
ssh janak@192.168.189.131 -p 22
ssh janak@192.168.1.64 -p 22
ping 192.168.1.64
telnet 192.168.1.64 22
ssh janak@192.168.1.64 
ifconfig
telnet 192.168.1.64 22
ssh janak@192.168.1.64 
code .
npm run dev\

ssh -iv janak@192.168.189.129
ssh -i janak@192.168.189.129
ssh janak@192.168.189.129
ssh janak@192.168.1.66
ssh janak@192.168.1.66 -p 22
cler
clear
cd
clear
ssh janak@192.168.1.66
cat ~/.ssh/id_rsa.pub
ssh janak@192.168.1.66
git push -u origin master
ssh janak@192.168.1.66
code .
npm run dev\

git push -u origin master
ssh janak@192.168.1.66
git push -u origin master
ssh janak@192.168.1.66
code .
git push -u origin master
ssh janak@192.168.1.66
sudo systemctl status ssh
ssh janak@192.168.100.9
sudo nmtui
ssh janak@192.168.100.9
code .
ssh janak@192.168.100.9
ssh janak@192.168.189.129
ssh janak@192.168.189.0
ssh janak@192.168.189.129
ssh janak@192.168.189.10
ssh janak@191.168.189.10
ip a
ssh janak@191.168.189.1
ssh janak@191.168.189.10
ssh janak@191.168.189.1
ssh janak@191.168.189.10
ssh janak@191.168.189.1 -p 32
ssh janak@191.168.189.1
ssh janak@191.168.189.10
ping 191.168.189.10
ssh janak@192.168.189.10
ssh janak@192.168.189.25
code .
ssh janak@192.168.189.25
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\

git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\

source ~/.zshrc\

ssh janak@192.168.
sudo apt install ssh
ssh janak@192.168.253.100
sudo apt install ssh-copy-id
sudo ssh-copy-id janak@192.168.253.100
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.100
ssh janak@192.168.253.100
cd ~/.ssh/
chmod 600 id_rsa
ssh janak@192.168.253.100
cd ..
ssh-keygen -t rsa -b 4096 -C "janak0ff@gmail.com"
sudo ssh-copy-id janak@192.168.253.100
cd /.ssh
cd /home/.ssh
cd .ssh
sudo ssh-copy-id janak@192.168.253.100
cd ..
sudo ssh-copy-id janak@192.168.253.100
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.100
ssh -i janak@192.168.189.129
ssh janak@192.168.253.100
cat ~/.ssh/id_rsa.pub
git clone git@github.com:janak0ff/devops-blog.git
sudo ./code_1.100.2-1747260578_amd64.deb
./code_1.100.2-1747260578_amd64.deb
sudo dpkg -i code_1.100.2-1747260578_amd64.deb
code .
ssh janak@192.168.253.100
sudo apt install ./code_1.100.2-1747260578_amd64.deb
su -
sudo su
code .
/
cd
ssh janak@192.168.253.100
npm run dev
# Download and install nvm:\
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash\
\
# in lieu of restarting the shell\
\. "$HOME/.nvm/nvm.sh"\
\
# Download and install Node.js:\
nvm install 22\
\
# Verify the Node.js version:\
node -v # Should print "v22.16.0".\
nvm current # Should print "v22.16.0".\
\
# Verify npm version:\
npm -v # Should print "10.9.2".\

npm run dev
npm i
sudo apt install pnpm
pnpm install
npm install -g pnpm
pnpm -v
pnpm install
npm run dev
ssh janak@192.168.253.100
npm run dev
sudo apt install vlc
nano ~/.zshrc
source ~/.zshrc
nano ~/.zshrc
source ~/.zshrc
nano ~/.zshrc
source ~/.zshrc
ssh janak@192.168.253.100
git push -u origin master
ssh janak@192.168.253.100
_ansible
la
ls
ssh janak@192.168.253.100
lls
ls
cd .ssh\\

ls
clear
cd
code .
git push -u origin master
ssh janak@192.168.253.100
sudo chmod 400 jan-jenkins.pem  
sudo apt install ansible -y
sudo mkdir ansible
cd ansible
sudo mkdir hosts
sudo nano /etc/ansible/hosts
sudo rm hosts
sudo rmdir hosts
sudo nano /etc/ansible/hosts
ansible aws_servers -m ping
sudo cat /home/janak/.ssh/jen-jenkins.pem
sudo cat ~/.ssh/jan-jenkins.pem
sudo nano /etc/ansible/hosts
ansible aws_servers -m ping
find /home/janak -name "jen-jenkins.pem"
sudo nano /etc/ansible/hosts
ansible local_vms -m ping
sudo nano /etc/ansible/hosts
ansible local_vms -m ping
sudo nano /etc/ansible/hosts
ansible local_vms -m ping
ansible webservers -a "uptime"
nano first_playbook.yml
cat hosts
ansible-playbook first_playbook.yml
ansible-playbook first_playbook.yml -K
ansible-playbook first_playbook.yml
code .
npm run dev
clear
ssh janak@192.168.253.100
ansible all -m ping
sudo cat /etc/ansible/host
cd /etc/ansible
ls
cd host
cd /host
cat hosts
clear
sudo cat /etc/ansible/hosts
ansible local_vms -m setup
clear
sudo cat /etc/ansible/hosts
sudo nano /etc/ansible/hosts
ansible local_vms -m setup
clear
cd 
cd Documents
nano first_playbook.yml
ansible-playbook first_playbook.yml
ansible local_vms -a "uptime"
ansible all -m ping
clear
ansible-playbook first_playbook.yml
sudo cat /etc/ansible/hosts
git push -u origin master
npm run dev
code .
cd
sudo apt update
ssh janak@192.168.253.100
;d 
ls
cd 
cd .ssjh
cd .ssh
ls
cd
ls
cd .,ssh
cd .ssh
ls
ssh -i ~/.ssh/devops_key.pem janak0ff@4.242.192.92
ssh -i ~/.ssh/devops_key.pem janak0ff@54.144.193.168
ls
ls -al
chmod 600 jan-jenkins.pem
ls -al
ssh -i ~/.ssh/jan-jenkins.pem ubuntu@54.144.193.168
code .
npm run dev
git push -u origin master
ping 191.168.1.98
ping 172.17.0.1
ssh janak@192.168.253.100
code .
sudo add-apt-repository ppa:obsproject/obs-studio\
sudo apt update\
sudo apt install obs-studio\

obs
pipewire --version
sudo apt install xdg-desktop-portal-kde
systemctl --user enable --now pipewire pipewire-pulse wireplumber
pipewire --version
cat /etc/debian_version\
lsb_release -a # If available
sudo apt install xdg-desktop-portal-kde\

echo $XDG_CURRENT_DESKTOP
which pipewire\
ls -l /usr/bin/pipewire # Or wherever `which` points
sudo apt update
sudo apt install xdg-desktop-portal-kde
sudo reboot
pipewire --version
sudo apt update\
sudo apt full-upgrade
sudo apt install --reinstall xdg-desktop-portal xdg-desktop-portal-kde
# Stop PulseAudio services\
systemctl --user stop pulseaudio.service pulseaudio.socket\
\
# Disable them to prevent auto-starting\
systemctl --user disable pulseaudio.service pulseaudio.socket\
\
# Remove PulseAudio and its related packages\
sudo apt purge pulseaudio pulseaudio-utils pulseaudio-module-bluetooth pavucontrol # pavucontrol is the PulseAudio mixer, it should be replaced by plasma-pa or similar.
sudo apt install --reinstall pipewire pipewire-audio-client-libraries pipewire-alsa pipewire-jack pipewire-pulse wireplumber
systemctl --user enable --now pipewire pipewire-pulse wireplumber xdg-desktop-portal
sudo reboot
cat /etc/debian_version
pipewire --version
sudo apt install --reinstall plasma-pa
code .
npm run dev
git push -u origin master
code .
ssh janak@192.168.253.100
sudo apt-get update\
sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
AZ_REPO=$(lsb_release -cs)\
echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \\
  sudo tee /etc/apt/sources.list.d/azure-cli.list
sudo apt-get update\
sudo apt-get install azure-cli
az --version
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az login
ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa_azure
code .
terraform init
sudo mv ~/Downloads/terraform/terraform /usr/local/bin/
sudo mkdir terraform
sudo mv ~/Downloads/terraform/ ~/bin/
code .
sudo nano main.tf
ls
sudo nano outputs.tf
sudo nano variables.tf
ls
terraform init
cd /usr/bin
cd /terraform
ls
cd ..
cd /local/bin
sudo terraform inti
export PATH="/usr/local/bin:$PATH"
sudo terraform inti
export PATH="/usr/local/bin/terraform:$PATH"
sudo export PATH="/usr/local/bin/terraform:$PATH"
ls
sudo terraform inti
sudo .zshrc
source ~/.zshrc
terraform -v
sudo terraform -v
sudo apt update\
sudo apt install terraform
sudo apt install terraform
sudo terraform -v
terraform -v
sudo terraform -v
sudo apt update\
sudo apt install -y software-properties-common curl apt-transport-https gnupg2 ca-certificates
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update\
sudo apt install terraform
terraform -v
sudo terraform init
sudo terraform plan
cd ~/azure-vm-terraform # Or whatever your project directory is called
terraform plan
az account show\

mkdir terraform-azure-vm\
cd terraform-azure-vm\

touch main.tf\

nano main.tf
terraform init\

terraform plan\

az account show --query id -o tsv\

nano main.tf
terraform plan\

az account show --output table\

az account set --subscription "Azure for Students"\

az account show --query id -o tsv\

nano main.tf
terraform plan\

nano main.tf
az login\
az account set --subscription "Azure for Students"\

export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)\

terraform plan\

nano terraform.tfvars
code .
az account show --query "{subscriptionId:id, tenantId:tenantId}" --output json\

sudo rm -rf terraform
code .
terraform plan\

az login\
az account set --subscription "Azure for Students"\

terraform init\
terraform plan\
terraform apply\

ls ~/.ssh/id_rsa.pub\

terraform plan\
terraform apply\

az login\
az account show\

~/.ssh/id_rsa.pub\

sudo ~/.ssh/id_rsa.pub\

terraform init\
terraform plan\
terraform apply\

export ARM_SUBSCRIPTION_ID="bf97eca7-bcbd-41ce-bc31-9c5d684f2073"\
export ARM_TENANT_ID="69c13822-3598-4d4d-aae2-f1420ad786ab"\
export ARM_CLIENT_ID=""\
export ARM_CLIENT_SECRET=""\

terraform plan\
terraform apply
terraform apply
env
terraform apply
terraform init\
terraform plan\
terraform apply\

ls
ps aux |grep bluetoo
sudo systemctl start bluetooth
sudo systemctl status bluetooth
code .
terraform init\
terraform plan\
terraform apply\

clear
terraform init\
terraform plan\
terraform apply\

terraform plan
env
export ARM_SUBSCRIPTION_ID="bf97eca7-bcbd-41ce-bc31-9c5d684f2073"\
export ARM_TENANT_ID="69c13822-3598-4d4d-aae2-f1420ad786ab"\
export ARM_CLIENT_ID=""\
export ARM_CLIENT_SECRET=""\

terraform plan
terraform apply
co
code .
terraform  inti
clear
terraform  init
terraform apply
terraform init\
terraform plan\
terraform apply\

terraform  destroy
terraform refresh
terraform init\
terraform plan\
terraform apply\

code .
terraform init\
terraform plan\
terraform apply\

code .
terraform init\
terraform plan\
terraform apply\

clear
terraform apply
terraform init
terraform apply
terraform apply\

terraform import azurerm_resource_group.example /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073/resourceGroups/example-resources\

terraform plan\
terraform apply\

cd terraform-azure-vm
terraform apply
terraform init\
terraform apply\

clear
terraform apply\

terraform init\
terraform apply\

terraform output\

terraform apply\

4.180.51.20
ssh -i ~/.ssh/id_rsa adminuser@4.180.51.20\

ssh janak@192.168.253.100
cd Downloads
ssh janak@192.168.253.100
kwriteconfig5 --file kscreenlockerrc --group Daemon --key ScaleFactor 1\
kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0\
rm ~/.config/kscreenlockerrc\
rm ~/.local/share/kscreen/*\

exit
kwriteconfig5 --file kscreenlockerrc --group Daemon --key ScaleFactor 1\
kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0\
rm ~/.config/kscreenlockerrc\
rm ~/.local/share/kscreen/*\

reboot
sudo kwriteconfig5 --file kscreenlockerrc --group Daemon --key ScaleFactor 1\
kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0\
rm ~/.config/kscreenlockerrc\
rm ~/.local/share/kscreen/*\

sudo rm ~/.config/kscreenlockerrc\
rm -rf ~/.local/share/kscreen/\

xrandr --output <DISPLAY> --scale 1x1\

kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0\

sudo kwriteconfig5 --file kcmfonts --group General --key ForceFontDPI 0\

sudo rm -rf ~/.config/plasma* ~/.config/k* ~/.config/kwin* ~/.config/kscreen* ~/.config/dolphin* ~/.config/kde* ~/.cache/* ~/.local/share/kscreen ~/.local/share/kxmlgui5 ~/.local/share/plasma*\

sudo rm -rf ~/.config/* ~/.local/* ~/.cache/*\

sudo rm ~/.config/plasma-org.kde.plasma.desktop-appletsrc\
killall plasmashell\
kstart5 plasmashell\

code .
cd terraform
terraform version
sudo apt update\
sudo apt install awscli -y\

aws --version\

aws configure\

terraform init\

cd aws
terraform init\

terraform fmt
cd azure
terraform fmt
terraform validate
terraform plan
terraform apply\

terraform destroy\

terraform apply\

terraform output\

terraform refresh\
terraform output\

terraform apply\

ssh -i terraform-janak.pem ec2-user@18.234.190.202
chmod 400 terraform-janak.pem\

ssh -i terraform-janak.pem ec2-user@18.234.190.202
ls
sudo chmod 400 terraform-janak.pem\

ssh -i terraform-janak.pem ec2-user@18.234.190.202
terraform init\
terraform apply\

chmod 400 terraform-janak.pem\
ssh -i terraform-janak.pem ec2-user@34.205.64.73
terraform destroy\

code .
npm run dev
terraform destroy\

clear
terraform init\

clear
terraform validate\

terraform fmt
terraform apply\

ssh -i terraform-janak.pem ec2-user@3.85.61.224
terraform destroy\

git push -u origin master
npm run dev
git push -u origin master
code .
git push -u origin master
clear
cd ..
sudo apt-get update\
sudo apt-get install azure-cli
clear
cd azure
clear
az version\

terraform -v\

az login\

code .
az account show\

az account show --query "{subscriptionId:id, tenantId:tenantId}"\

az ad sp create-for-rbac --name terraform-sp --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az role assignment list --assignee 95a2b8d6-c549-485c-876c-4e25657ddad1
terraform init\

terraform plan\

az role assignment create \\
  --assignee "49efb880-f199-4ae9-be64-70d920488a2b" \\
  --role "Contributor" \\
  --scope "/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"\

az account clear && az login\
terraform plan\

az role assignment list --assignee "49efb880-f199-4ae9-be64-70d920488a2b" --all --output table\

terraform plan\

terraform apply\

az role assignment create \\
  --assignee "95a2b8d6-c549-485c-876c-4e25657ddad1" \\
  --role "Contributor" \\
  --subscription "bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
terraform apply\

terraform destroy\

az role assignment list --assignee 8c816d38-e764-4de5-9833-52ce956ad43a
az role assignment create --assignee 8c816d38-e764-4de5-9833-52ce956ad43a\\
  --role "Contributor" \\
  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
terraform refresh\
terraform output\

terraform init
terraform plan
terraform apply\

terraform destroy\

terraform apply\

az role assignment create --assignee 8c816d38-e764-4de5-9833-52ce956ad43a\\
  --role "Contributor" \\
  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
terraform apply\

ssh -i ~/.ssh/id_rsa adminuser@20.61.60.198\

terraform init\
terraform apply\

ssh -i ~/.ssh/id_rsa adminuser@20.61.60.198\

terraform init\
terraform apply\

ssh -i ~/.ssh/id_rsa aws_janak@20.61.60.198\

ssh -i ~/.ssh/id_rsa janak_aws@20.61.60.198\

ssh -i ~/.ssh/id_rsa adminuser@20.61.60.198\

terraform destroy\

clear
terraform init\
terraform apply\

terraform import azurerm_resource_group.janakaws /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073/resourceGroups/Janak-res\

terraform plan\

terraform apply\

ssh -i ~/.ssh/id_rsa Janak-aws-vm@40.68.191.75
ssh -i ~/.ssh/id_rsa janak_aws@40.68.191.75\

code .
npm run dev
terraform destroy\

az group delete --name Janak-res --yes --no-wait\

clear
terraform -v
az version
az login
az account show
az account show --query "{subscriptionId:id, tenantId:tenantId}"
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073\
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/<subscription-id>"\
\
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
az account show --query "{subscriptionId:id, tenantId:tenantId}"
clear
az account show --query "{subscriptionId:id, tenantId:tenantId}"
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az role assignment list --assignee 2c6e5db5-620e-4b07-8b9a-90445f297d41
az role assignment create \\
  --assignee 2c6e5db5-620e-4b07-8b9a-90445f297d41 \\
  --role "Contributor" \\
  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073\

terraform init
terraform plan
terraform apply
ssh -i ~/.ssh/id_rsa janak_aws@135.236.2.223
clear
terraform -v
az version
az login
az account show
az account show --query "{subscriptionId:id, tenantId:tenantId}"
az ad sp create-for-rbac --name terraform-janak --role="Contributor" --scopes="/subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073"
az role assignment create \\
  --assignee 66ab3502-4703-4fca-9491-09986d5203ea \\
  --role "Contributor" \\
  --scope /subscriptions/bf97eca7-bcbd-41ce-bc31-9c5d684f2073
terraform init
terraform plan
terraform apply
ssh -i ~/.ssh/id_rsa janak_azure@51.136.100.152
code .
npm run dev
terraform destroy
clear
terraform -v
az version
az login
git push -u origin master
code .
git push -u origin main
code .
git push -u origin main
code .
pnpm run build
npm run dev
git push -u origin master
git rebase -i HEAD~5\

git push origin master --force\

sudo apt install git-filter-repo
git filter-repo --path 'src/data/blog/_terraform/terraform azure.md' --invert-paths\

git filter-repo --path 'src/data/blog/_terraform/terraform azure.md' --invert-paths --force\

git push origin master --force\

git remote add origin git@github.com:janak0ff/devops-blog.git\

git push origin master --force\

git push origin master
sudo apt update
sudo apt upgrade
sudo apt autoremove
sudo apt autoclean
sudo apt clean
ssh janak@192.168.253.100
code .
chmod +x zsh_setup.sh
./zsh_setup.sh
sudo ./zsh_setup.sh
cd Documents
sudo ./zsh_setup.sh
sudo chmod +x zsh_setup.sh
./zsh_setup.sh
ssh -i ~/.ssh/devops_key.pem janak0ff@4.242.192.92
chmod 600 ~/.ssh/devops_key.pem\

ssh -i ~/.ssh/devops_key.pem janak0ff@4.242.192.92\

ssh -i ~/.ssh/devops_key_0616.pem azureuser@20.169.90.125
chmod 600 ~/.ssh/devops_key_0616.pem
ssh -i ~/.ssh/devops_key_0616.pem azureuser@20.169.90.125
clear
ssh -i ~/.ssh/devops_key_0616.pem azureuser@20.169.90.125
code .
ssh -i ~/.ssh/devops_key_0616.pem azureuser@20.169.90.125
code .
clear
code .
sudo apt upgrade
sudo apt install docker.io -y
clear
docker compose up --build -d
clear
docker compose up --build -d
lsof -i :8080
sudo lsof -i :8080
docker stop $(docker ps -aq)\
docker rm $(docker ps -aq)
docker ps
sudo usermod -aG docker janak
docker ps
	newgrp docker\

docker ps
cd Documents
cd Medical-php-sql-app
docker compose up --build -d
docker --version\
docker compose version\

mkdir -p ~/.docker/cli-plugins\

curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose\

chmod +x ~/.docker/cli-plugins/docker-compose\

Docker Compose version v2.24.6\
docker compose version\

docker compose version\

docker compose up --build -d\

ls
docker compose up --build -d
code .
npm run dev
docker run hello-world
code .
docker run -d -p 8080:80 nginx
lsof -i :8080
sudo netstat -tulpn | grep :8080
lsof -i :80
sudo netstat -tulpn | grep :80
sudo apt install lsof
lsof -i :80
htop
[200~lsof -i :8080~
lsof -i :8888
htop
sudo lsof -i :8888\

sudo netstat -tulpn | grep :8888
cd ..
mkdir my-docker-app\
cd my-docker-app
nano app.py
nano Dockerfile
docker build -t my-flask-app .
nano Dockerfile
docker build -t my-flask-app .
docker run -d -p 5000:5000 my-flask-app
docker stop $(docker ps -aq)\
docker rm $(docker ps -aq)
docker images prune -a
docker images
docker ps -a
code .
git push origin master
code .
docker compose up --build -d
ls
cd ..
cd Medical-php-sql-app
docker compose up --build -d
code .
docker compose down\
docker compose up --build -d\

docker compose down -v
docker compose up --build -d
docker compose down -v
docker compose up --build -d
git push origin main
clear
docker compose down -v
git push origin main
clear
docker compose up --build -d
npm run dev
git push origin master
docker compose down -v
d
npm run dev
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
sudo dpkg -i minikube_latest_amd64.deb
minikube version
code .
	newgrp docker\
curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
url -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"\

curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"\

kubectl version --client
# Download kubectl\
curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"\
\
# Make it executable\
chmod +x kubectl\
\
# Move to PATH\
sudo mv kubectl /usr/local/bin/\
\
# Check version\
kubectl version --client\

curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"\

	chmod +x kubectl\

sudo mv kubectl /usr/local/bin/\

kubectl version --client\

sudo rm -f /usr/local/bin/kubectl\

# Get the latest stable version\
KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)\
\
# Download the kubectl binary for Linux AMD64\
curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"\
\
# Make it executable\
chmod +x kubectl\
\
# Move it to your system PATH\
sudo mv kubectl /usr/local/bin/\

kubectl version --client\

git push origin master
KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)\
echo $KUBECTL_VERSION\

curl -LO https://storage.googleapis.com/kubernetes-release/release/$\(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt\)/bin/linux/amd64/kubectl
chmod +x ./kubectl
curl -LO https://storage.googleapis.com/kubernetes-release/release/$\(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt\)/bin/linux/amd64/kubectl
curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"\

chmod +x kubectl\

sudo mv kubectl /usr/local/bin/\

kubectl version --client\

clear
cd terraform
cd aws
clear
terraform init
terraform validate
terraform apply
docker ps -a
docker ps
docker images
code .
npm run dev
ssh -i ~/.ssh/id_rsa janak_azure@18.205.161.34
git push origin master
code .
terraform output instance_public_ip
code .
terraform show
terraform state list
npm run dev
git push origin master
terraform output instance_public_ip
code .
ssh -i terraform-janak.pem ec2-user@18.205.161.34
ssh -i ~/terraform/aws/terraform-janak.pem ec2-user@18.205.161.34
terraform destroy
ssh -i ~/terraform/aws/terraform-janak.pem  ubuntu@ec2-35-173-177-9.compute-1.amazonaws.co
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com
clear
scp -r -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
scp -r -i ~/terraform/aws/terraform-janak.pem . ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com
clear
docker ps
docker compose up --build -d
code .
docker compose up -d
docker compose down -v
docker compose up --build -d
scp -i ~/terraform/aws/terraform-janak.pem index.php ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com:/home/ubuntu/php-sql-app/index.php
docker compose down -v
code .
npm run dev
code .
git push origin master
git push origin main
git push origin master
npm run dev
clear
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-100-27-29-251.compute-1.amazonaws.com
code .
clear
scp -r -i ~/terraform/aws/terraform-janak.pem . ubuntu@ec100.27.29.251.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
scp -r -i ~/terraform/aws/terraform-janak.pem . ubuntu@ec2-100-27-29-251.compute-1.amazonaws.com:/home/ubuntu/php-sql-app
code .
clear
code .
npm run dev
git push origin master
sudo nano /etc/hosts
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-100-27-29-251.compute-1.amazonaws.com
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec2-35-173-177-9.compute-1.amazonaws.com
ssh -i ~/terraform/aws/terraform-janak.pem ubuntu@ec35.175.145.25.compute-1.amazonaws.com
ping 35.175.145.25
docker compose down -v
docker compose up --build -d
docker compose up -d
docker volume create jenkins-data
docker volume create jenkins-docker-certs
ld
docker network create jenkins-net
cd  Jenkins_home
nano docker-compose.yml
docker-compose up -d
docker compose up -d
sudo  apt-get -y docker compose
docker volume
docker volume ls
code .
cd terraform
cd azure
az login
az version
az login
clear
ssh -i ~/.ssh/az-janak.pem az-janak@20.40.56.19
cd ~
chmod 600 ~/.ssh/az-janak.pem
ssh -i ~/.ssh/az-janak.pem az-janak@20.40.56.19
\:q
ssh -i ~/.ssh/az-janak.pem az-janak@20.40.56.19
ls
cd .ssh
ls
cd
rm .vimrc
curl https://raw.githubusercontent.com/sudiplun/dotfiles/refs/heads/main/vim/.vimrc
ls
ls -a
curl https://raw.githubusercontent.com/sudiplun/dotfiles/refs/heads/main/vim/.vimrc > .vimrc
vim
sudo apt install vim -y 
cd .ssh
vim config
ls
ssh jenkins
ls
mkdir test
cd test
ssh-keygen
ls
cat jenkins.pub
cd ..
ls
vim config
cd test
ls
chmod 600 jenkins.pub
chmod 600 jenkins
cd
ssh jenkins
vim config
ssh jenkins
ssh -i ~/.ssh/az-janak.pem az-janak@20.40.56.19
cat config
ssh jenkins
cd test
ls
cat jenkins.pub
ssh jenkins
cd ..
ls
cd test
vim jenkinsv1
cd ..
vim conn
vim config
ssh jenkins
chmod 600 jenkins-test.pem
vim config
ssh jenkins
ssh -i ~/.ssh/az-janak.pem az-janak@20.40.56.19
ls
cd test
ls
cdd
cd
ssh jenkins
ls -a
clear
cat /etc/apt/sources.list
ssh jenkins
chsh -s $(which bash)
cd devops-blogs
code .
cd /
git push origin master
git push origin master
code .
code .
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
chmod 600 ~/.ssh/az-janak.pem
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
chmod 600 ~/.ssh/aws-janak.pem
cat terraform-janak.pem
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-44-202-30-180.compute-1.amazonaws.com
ssh -i ~/.ssh/terraform-janak.pem  ubuntu@ec2-44-202-30-180.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-3-87-4-161.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-44-210-144-130.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  ubuntu@ec2-44-210-144-130.compute-1.amazonaws.com
sudo apt update
sudo apt install xfce4 xfce4-goodies
sudo apt install kde-plasma-desktop
./anydesk_7.0.0-1_amd64.deb
sudo -i dpkg ./anydesk_7.0.0-1_amd64.deb
sudo apt install ./anydesk_7.0.0-1_amd64.deb
sudo cat /proc/cpuinfo
sudo cat /proc/meminfo
cd /var
ls
cd log
ls
ls -h
cat boot.log
sudo cat boot.log
less syslog
ls
journalctl -r
ls
cd journal
l
ls
cd 9cde489cec104f9b80f39bb2e2f6b41a
ls
ranger
apt install ranger
sudo apt-get install ranger
ranger
ranger
ranger
sudo apt-get install tmux
sudo apt-get install ghostty
sudo apt-get install kitty
cd .config
ls
mkdir tmux
ls
cd tmux
ls
exit
ls
pwd
cat .zshrc
exit
ls
tmux
exit
cd .config/tmux
curl https://raw.githubusercontent.com/sudiplun/dotfiles/refs/heads/main/tmux/tmux.conf > tmux.conf
ls
tmux
vim tmux.conf
tmux kill-server\

tmux attach
tmux
vim .zshrc
source ~/.zshrc
yazi
git clone https://github.com/janak0ff/janak0ff.github.io.git
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-54-147-218-42.compute-1.amazonaws.com
git push origin main
code .
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-44-206-242-143.compute-1.amazonaws.com
whoami
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-3-83-158-134.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-3-83-158-134.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-44-206-242-143.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-3-83-158-134.compute-1.amazonaws.com
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-44-206-242-143.compute-1.amazonaws.com:/home/admin/app
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-3-83-158-134.compute-1.amazonaws.com:/home/admin/app
docker-compose up -d
sudo apt install -y docker-compose
docker-compose up -d
git push origin master
npm run dev
npm run dev
npm run dev
npm run dev
npm run dev
npm i
npm i
npm run dev
npm run dev
code .
docker-compose up -d
docker ps
docker compose down -v
docker compose up -d
docker network ls 
docker compose down -v
docker compose up -d --build
code .
clear
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-13-222-240-47.compute-1.amazonaws.com:/home/admin/app
code .
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-54-89-216-5.compute-1.amazonaws.com:/home/admin/app
code .
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-54-89-216-5.compute-1.amazonaws.com:/home/admin/app
code .
npm run dev
code .
npm run dev
code .
ssh -i ~/.ssh/aws-janak.pem admin@ec2-13-222-240-47.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-3-83-158-134.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-13-222-240-47.compute-1.amazonaws.com
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-54-89-216-5.compute-1.amazonaws.com
# Download and install nvm:\
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash\
\
# in lieu of restarting the shell\
\. "$HOME/.nvm/nvm.sh"\
\
# Download and install Node.js:\
nvm install 22\
\
# Verify the Node.js version:\
node -v # Should print "v22.17.0".\
nvm current # Should print "v22.17.0".\
\
# Verify npm version:\
npm -v # Should print "10.9.2".\

npm run dev
git pull
code .
npm install -g pnpm@latest-10
git clone git@github.com:janak0ff/devops-blog.git
code .
sudo apt update\
sudo apt install pinta\

sudo apt update\
sudo apt install pinta\

sudo apt install gimp\

sudo apt install pinta
sudo apt install kolourpaint
npm run dev
npm install\

npm run dev
pnpm install
npm install -g pnpm\

pnpm -v\

pnpm install\

pnpm run dev
pnpm run dev
npm run dev
git push origin master
git push origin master
pnpm run build
git push origin master
git push origin master
git push origin master
git push origin master
git push origin master
code .
git push origin master
code .
tar -xvzf syncthing-linux-amd64-v1.29.7.tar.gz\

cd syncthing-linux-amd64-v1.29.7\
sudo mv syncthing /usr/local/bin/\

syncthing --version\

syncthing\

rm syncthing-linux-amd64-v1.29.7.tar.gz\
rm -r syncthing-linux-amd64-v1.29.7\

rm syncthing-linux-amd64-v1.29.7.tar.gz\
rm -r syncthing-linux-amd64-v1.29.7\

git push origin main
docker compose up -d --build
ssh -i ~/.ssh/aws-janak.pem  admin@ec2-54-174-88-245.compute-1.amazonaws.com
code .
code .
e
code .
scp -r -i ~/.ssh/aws-janak.pem . admin@ec2-54-174-88-245.compute-1.amazonaws.com:/home/admin/app
docker compose down -v
git push origin main
code .
code .
syncthing\

syncthing --version\

syncthing
npm start
npm start
npm start
pnpm start
npm start
npm start
pnpm start
code .
npm start
npm run dev
code .
npm run dev
npm install -g @google/gemini-cli\
gemini
cd Desktop
ls
cd devops-blogs
cd devops-blog
gemini
lazygit
sudo apt install lazygit
sudo apt install lazygit
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')\
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"\
tar xf lazygit.tar.gz lazygit\
sudo install lazygit -D -t /usr/local/bin/
lazygit
gemini
ls
ls
fd
sudo apt install fd
rm -rf lazygit
rm lazygit.tar.gz
lazydocker
sudo systemctl start docker
lazydocker
cd 
cd git
mkdir git 
cd git
git clone git@github.com:janak0ff/DevOps.git
git branch -M content.md
cd DevOps
git branch -M content.md
ls
lazygit
lazgit
lazygit
git branch
ls
git branch
git remote -v
git push origin -u content.md
git branch
lazygit
;d
ps aux |grep eval
ps aux |grep ssh-agent
ls
mkdir readmore
mv *.md readmore
ls
lg
lazygit
poweroff
apt show vlc
sudo apt install nala
nala update 
sudo nala update 
cd /etc/apt
ls
cd sources.list.d
l;s
ls
cat google-chrome.list
apt search fd
apt search fd | grep fd
nala search fd | grep fd
sudo nala update
sudo nala npm
sudo nala install npm
last
ls
cd
sudo apt install go
	sudo apt install golang -y
go install github.com/jesseduffield/lazydocker@latest
sudo -i
git clone --depth 1 https://github.com/jesseduffield/lazydocker.git\
cd lazydocker\
go install
sudo apt install btop
btop
btop
cd
lqa
;a
la
vim .zshrc
lazydocker
npm run dev
git push origin master
sudo apt search brave
sudo apt install curl\
\
sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg\
\
sudo curl -fsSLo /etc/apt/sources.list.d/brave-browser-release.sources https://brave-browser-apt-release.s3.brave.com/brave-browser.sources\
\
sudo apt update\
\
sudo apt install brave-browser
code .
npm run dev
lazygit
sudo apt autoclean
sudo apt autoclean
aws --version
terraform -version
aws configure
aws configure
terraform init
terraform fmt
terraform validate
terraform validate
terraform apply
git push origin master
terraform destroy
terraform init
terraform fmt
terraform validate
terraform validate
terraform apply
code .
code .
ssh -i ~/.ssh/aws-janak.pem  ubuntu@54.161.43.153
ssh -i ~/.ssh/aws-janak.pem  ubuntu@54.80.49.126
python3 --version
python3 -m ensurepip --default-pip
ansible --version
python3 -m ensurepip --default-pip
sudo python3 -m ensurepip --default-pip
clear
python3 --version
python3 -m ensurepip --default-pip
sudo apt update\
sudo apt install python3-pip
python3 -m pip install --user ansible
aptitude moo
ls /media/janak/\

sudo umount /media/janak/GET\

ls /media/janak/GET/\

sudo umount /media/janak/GET\

ls /media/janak/GET/\

dmesg | tail -20\

sudo find / -type d -name devops 2>/dev/null\

sudo umount /media/janak/GET\

sudo umount /media/janak/GET\

lsblk\

sudo apt install testdisk\

sudo photorec\

cat aws-janak.pem
clear
git clone git@github.com:janak0ff/Dockerize-PHP-and--SQL-App.git
code .
git push origin main
ssh -i ~/.ssh/aws-janak.pem  admin@35.172.133.142
ssh -i ~/.ssh/aws-janak.pem  ubuntu@54.242.147.208
ssh -i ~/.ssh/aws-janak.pem  admin@54.242.147.208
ssh -i ~/.ssh/aws-janak.pem  admin@54.242.147.208
ln
man ln
echo "This is the original file." > original.txt\

ln original.txt hardlink1.txt\

ln original.txt hardlink2.txt\

ln original.txt hardlink2.txt\

ls -li original.txt hardlink1.txt hardlink2.txt\

git remote -v
code .
sudo apt install fasttetch
apt search fastfetch
sudo apt install fastfetch
fastfetch
neofetch
sudo apt install neofetch
neofetch
sudo apt install screenfetch
screenfetch
uname -a\
hostnamectl\

hostnamectl
inxi -Fxz\

sudo apt install inxi
inxi -Fxz
sudo inxi -Fxz
hardinfo\

echo -e "\n== SYSTEM =="; uname -a; echo -e "\n== CPU =="; lscpu | grep 'Model\|CPU'; echo -e "\n== MEMORY =="; free -h; echo -e "\n== DISK =="; df -h; echo -e "\n== NETWORK =="; ip a\

mkdir gitdemo
cd gitdemo
git init
ls -h
ls -a
cd .git
ls
cd ..
ls
nano comprehensive overview of your Linux system.md
cler
clear
code .
sudo apt update 
sudo apt upgrade -y
sudo apt upgrade -y
clear
git status
py test.py
git status
git add .
git status
git checkout -b dev
git status
git checkout -b main
git checkout -b dev
git branch
git checkout main
git checkout master
git status
git checkout master
git checkout -b master
git status
git commit -m "python test"
git status
clear
git status
git status
git add .
git commit -m "txt"
git checkout dev
git branch
git checkout -b dev
git status
git status
git commit m "modi"
git commit -m "mod"
git status
git commit -m "mod"
git checkout master
git status
git commit -m "mod"
git status
git commit -m "mod"
git add .
git status
git commit -m "mod"
git checkout dev
git checkout master
virtualenv -p python3.7 env
virtualenv -p python3.7 env
virtualenv -p python3.7 env
virtualenv -p python3.7 env
virtualenv -p python3.11 env\

source env/bin/activate\

python manage.py migrate
pip install django\

python manage.py migrate\

python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver
pip freeze > requirements.txt\

pip install -r requirements.txt\

virtualenv -p python3.7 env
rm -rf env
rm requirements.txt
python3.11 -m venv env
sudo apt install python3.11-venv\

python3.11 -m venv env\
source env/bin/activate\

pip install django\
python manage.py runserver\

pip install virtualenv\

sudo apt update\
sudo apt install python3-virtualenv\

python3.7 --version\

sudo apt update\
sudo apt install python3.7 python3.7-venv\

sudo apt update\
sudo apt install kazam\

pip freeze > requirements.txt\

rm -rf env\
python3.11 -m venv --without-pip --clear env\
source env/bin/activate
rm -rf env
python -m venv venv
python3 --version\
python --version
deactivate
python --version\
python3 --version
deactivate
python3 --version
rm -rf venv
python3 -m venv venv
source venv/bin/activate
rm requirements.txt
which python\
python --version
pip install django
python manage.py makemigrations\
python manage.py migrate\

python manage.py runserver
python manage.py runserver
pip freeze > requirements.txt\

python manage.py runserver
code .
git clone https://github.com/shreys7/django-todo.git
code .
code .
terraform destroy
code .
terraform init
terraform fmt
terraform validate
terraform plan
terraform apply
code .
git checkout -b main
python3 -m venv venv
source venv/bin/activate
pip install django
python manage.py makemigrations\
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver
pip freeze > requirements.txt\

git status
git push origin main
git push origin main
source venv/bin/activate
python manage.py runserver
git clone git@github.com:janak0ff/django-todo.git
code .
code .
code .
ssh -i ~/.ssh/aws-janak.pem  ubuntu@52.202.151.15
sudo apt purge kazam
sudo apt update
sudo apt upgrade -y
sudo apt autoclean
sudo apt clean
sudo apt autoremove
sudo apt upgrade -y
sudo apt update
sudo apt autoremove
sudo apt autoclean
code .
git clone https://github.com/cotes2020/jekyll-theme-chirpy.git
rm -rf jekyll-theme-chirpy
rm -rf /
sudo apt update
sudo apt upgrade -y
code .
npm run dev
npm run dev
npm run dev
npm run dev
git push origin master
git push origin master
git push origin main
code .
npm run dev
git push origin master
code .
syncthing
npm run dev
git push origin master
code .
source venv/bin/activate
code .
git status
git branch
git checkout -b main
git status
git remote -v
ssh -i ~/.ssh/aws-janak.pem  ubuntu@52.202.151.15
ssh -i ~/.ssh/aws-janak.pem  ubuntu@13.221.102.188
ssh -i ~/.ssh/aws-janak.pem  ubuntu@3.85.109.97
ssh -i ~/.ssh/aws-janak.pem  ubuntu@3.85.109.97
sudo apt update
sudo apt upgrade -y
clear
ssh -i ~/.ssh/aws-janak.pem  ubuntu@3.85.109.97
ssh -i ~/.ssh/aws-janak.pem  ubuntu@3.85.109.97
sudo apt update
sudo apt upgrade -y
ssh -i ~/.ssh/aws-janak.pem  ubuntu@13.221.102.188
code .
npm run dev
npm install -g npm@11.5.2
npm run dev
npm run dev
git push origin master
n
npm run dev
npm run dev
git push origin master
ssh -i ~/.ssh/aws-janak.pem  ubuntu@13.221.102.188
clear
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
code .
code .
code .
code .
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
code .
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
syncthing
syncthing
syncthing
syncthing
syncthing
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
sudo apt update
sudo apt upgrade -y
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ifconfig
ifconfig
ip a
sudo apt install net-tools
ifconfig
rehash
ifconfig
ifconfig
ip a
ssh key-gen
ssh-keygen
clear
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ssh -i ~/.ssh/aws-janak.pem  ubuntu@44.202.47.32
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
python3 -m http.server 6789 --bind 0.0.0.0
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
nano pm2.md
nano py-http-server.md
git init
ls
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
lazygit
cd Downloads
ls
cd ..
cd Documents
ls
cd node\ app
clear
lazynpm
lazygit
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
code .
code .
sudo tar xf lazynpm_0.1.4_Linux_x86_64.tar.gz
sudo mv lazynpm /usr/local/bin
lazygit
git push origin master
git push origin master
git push origin master
git push origin master
code .
code .
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
ssh -i ~/.ssh/az-janak.pem azureuser@172.212.90.220
sudo apt update\
sudo apt install ansible -y
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
ssh -i ~/.ssh/az-janak.pem az-janak@135.235.193.22
docker-compose up -d\

docker-compose up -d\

docker rm -f jenkins\

docker ps
docker-compose up -d\

docker ps
clear
sudo rm -f jenkins_data
sudo rm -rf jenkins_data
code .
sudo systemctl status nginx
sudo apt update\
sudo apt install nginx -y\

sudo systemctl start nginx
sudo systemctl enable nginx
sudo systemctl status nginx
sudo nano /etc/nginx/sites-available/jenkins\

sudo ln -s /etc/nginx/sites-available/jenkins /etc/nginx/sites-enabled/\
sudo nginx -t\
sudo systemctl reload nginx\

sudo systemctl status nginx
sudo nano /etc/nginx/sites-available/jenkins\

sudo ln -s /etc/nginx/sites-available/jenkins /etc/nginx/sites-enabled/\
sudo nginx -t\
sudo systemctl reload nginx\

sudo nano /etc/hosts\

lazydocker
docker run -d \\
  --name jenkins \\
  -p 8080:8080 \\
  -p 50000:50000 \\
  -v jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

lazydocker
sudo nano /etc/hosts\

sudo mkdir -p /etc/nginx/ssl
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/jenkins.key -out /etc/nginx/ssl/jenkins.crt
sudo nano /etc/nginx/sites-available/jenkins.conf
sudo nano /etc/nginx/sites-available/jenkins.conf
sudo ln -s /etc/nginx/sites-available/jenkins.conf /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx
cd /
cd /etc/nginx/
ls
cd sites-available
ls
sudo rm -f default jenkins
ls
cd ..
ls
cd sites-enabled
ls
sudo rm -f default jenkins
sudo systemctl restart nginx
cd ..
cd ssl
ls
cat jenkins.crt
cat jenkins.key
sudo cat jenkins.key
docker ps
docker run -d \\
  --name jenkins \\
  -p 8080:8080 \\
  -p 50000:50000 \\
  -v jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

docker ps
docker stop jenkins
docker ps
lazydocker
docker ps
docker run -d \\
  --name jenkins \\
  -p 8080:8080 \\
  -p 50000:50000 \\
  -v jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

lazydocker
docker run -d \\
  --name jenkins \\
  -p 8080:8080 \\
  -p 50000:50000 \\
  -v jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

lazydocker
docker ps -a
docker start jenkins
docker ps
lazydocker
sudo nano /etc/hosts\

sudo nano /etc/hosts\

lazydocker
docker run -d \\
  --name jenkins \\
  -p 8080:8080 \\
  -p 50000:50000 \\
  -v jenkins_home:/var/jenkins_home \\
  jenkins/jenkins:lts\

lazydocker
clear
sudo apt update\
sudo apt install cloudflared
wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb\
sudo dpkg -i cloudflared-linux-amd64.deb
cloudflared tunnel login
lazydocker
man cd
man -cd
man
man man
man ls
man cd
man ip
ip -v
tree
cd Desktop
tree
clear
tree
clear
tree -d
c
clear
sudo rm -rf recup*
npm run dev
code .d
code .
sudo cd docker
ls
docker ps
lazydocker
ls -a
clear
sudo apt-get update\
sudo apt-get install ./docker-desktop-amd64.deb
docker compose version
docker --version
gpg --generate-key
pass init 8CF89E98515CC63726A7C99DDA8C04BC882134F6
docker pull molly/privateimage
clear
docker run -d --name jenkins -p 8080:8080 -p 50000:50000 -v jenkins:/var/jenkins jenkins/jenkins:lts\

docker ps
docker exec -it jenkins bash
docker volume ls\

lazydocker
docker volume inspect jenkins\
\

cd /var/lib/docker/volumes/jenkins_home/_data
sudo cd /var/lib/docker/volumes/jenkins_home/_data
sudo su
docker ps
sudo nano /etc/cloudflared/config.yml
ls -la
ls -lai
which cd
which ls
which ip
clear
pushd /usr/local 
pushd /opt
pushd /home/
popd
popd
podd
popd
clear
ls
cd lazydocker
ls
tac coverage.txt
exit
git push origin master
sudo apt update 
sudo apt upgrade -y
cd /usr/share/keyrings
ls
for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
cd
cd /var/lib/docker/
sudo cd /var/lib/docker/
cd /
cd /var/lib/docker/
sudo cd /var/lib/docker/
sudo -s\
cd /var/lib/docker/\

cd
sudo apt-get update\
sudo apt-get install ./docker-desktop-amd64.deb
# Add Docker's official GPG key:\
sudo apt-get update\
sudo apt-get install ca-certificates curl\
sudo install -m 0755 -d /etc/apt/keyrings\
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\
sudo chmod a+r /etc/apt/keyrings/docker.asc\
\
# Add the repository to Apt sources:\
echo \\
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \\
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\
sudo apt-get update\
\

sudo apt-get update\
sudo apt-get install ca-certificates curl\
sudo install -m 0755 -d /etc/apt/keyrings\
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \\
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \\
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update\

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
sudo usermod -aG docker janak
newgrp docker
cd lazydocker
ls
cat coverage.txt
tac coverage.txt
less coverage.txt
tail -n 14
tail -n 14 coverage.txt
head -n 22 coverage.txt
cd 
cd /.ssh
cd .ssh/
ls
cat config
tac config
cd Desktop
cd
cd Desktop/
ls
clear
less server.log
less -N test_log.txt
less -N server.log
less server.log
nano server.log
docker ps
docker ps -a
docker start jenkins
docker ps
docker exec -it jenkins bash
lazydocker
lazydocker
docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword\

docker exec jenkins cat /var/jenkins/secrets/initialAdminPassword\

nmtui
ifconfig
/sbin/ifconfig
ip a
cd ~/.ssh/
ls
cat id_rsa.pub
ssh -i debian@192.168.253.136
ssh -i debian@192.168.253.136
ssh janak@192.168.253.100~
ssh janak@192.168.253.137
ssh janak@192.168.253.137 -p 22
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.136
ssh janak@192.168.253.136 -p 22
ssh janak@192.168.253.136
ssh janak@192.168.253.136
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.136
ssh janak@192.168.253.136
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.135
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.135
ssh janak@192.168.253.135
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.138
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.138
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.253.138
ssh janak@192.168.253.135
ssh janak@192.168.253.138
ssh janak@192.168.253.138 -p 22
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub kumar@192.168.253.138
ssh kumar@192.168.253.138
ssh kumar@192.168.253.138
ssh kumar@192.168.253.138
code l
code .
df -h
df -h
sudo apt update 
sudo apt upgrade -y
sudo apt upgrade -y
sudo apt update
cd /var/log/
ls
less -N 20 boot.log
sudo less -N 20 boot.log
cd ~/.local/share/Trash
ls
rm -i
rm -i
rm -i README.md
ls
rm -i README.md
mkdir -v test_dir
rmdir -rf test_dir
ls
rmdir test_dir
ls
echo -e "banana\napple\ncherry" > fruits.txt\
echo -e "dog\ncat\nzebra" > animals.txt\

sort < fruits.txt\

cat fruits.txt
sort < fruits.txt > sorted_fruits.txt\
cat sorted_fruits.txt\

sort < animals.txt >> sorted_fruits.txt\
cat sorted_fruits.txt\

code .
cat > input-file.txt << EOF\
apple\
banana\
cherry\
invalid_entry_!!@#\
date\
EOF
grep "error" /var/log/syslog > found_lines.txt
journalctl | grep "error" > found_lines.txt\

q
sudo journalctl | grep "error" > found_lines.txt\

sort < unsorted.txt
cd /
cd /var/log/syslog
cd /var/log
ls
ls /var/log/messages\

sudo journalctl
journalctl
find /etc -name "*.conf"
ind /var -type d -name "logs"
find /var -type d -name "logs"
sudo find /var -type d -name "logs"
cleaer
clear
cd
find /usr -name gcc
sudo apt update
sudo apt upgrade -y
yes hellow
yes hellow
no hello
grep -w "root" /etc/passwd
code .
syncthing
systemctl status bluetooth\

sudo apt update\
sudo apt install bluetooth bluez bluez-tools blueman\

sudo apt install pipewire-audio pipewire-pulse pipewire-alsa pipewire-jack wireplumber libspa-0.2-bluetooth\

sudo apt install pulseaudio pulseaudio-module-bluetooth\

code .
sudo apt update
sudo apt upgrade -y
sudo apt autoclean
sudo apt autoremove
sudo apt clean
sudo apt update
sudo apt install filelight
vmware-installer -l\

vmware-installer -u vmware-workstation\

sudo vmware-installer -u vmware-workstation\

sudo rm -rf /etc/vmware*\
sudo rm -rf /usr/lib/vmware*\
sudo rm -rf /usr/share/doc/*vmware\
sudo rm -rf /usr/bin/vmware-usbarbitrator\
sudo rm -rf /usr/bin/vmnet*\
sudo rm -rf /usr/bin/vmware*\
sudo rm -rf /usr/share/applications/vmware*\

/usr/bin/vmware-modconfig --console --install-all\

sudo /usr/bin/vmware-modconfig --console --install-all\

sudo apt update\
sudo apt install linux-headers-$(uname -r)\

sudo apt update\
sudo apt install policykit-1\

sudo vmware-modconfig --console --install-all\

sudo apt update\
sudo apt install policykit-1\

sudo apt update\
sudo apt install pkexec\

sudo vmware\

lazydocker\

curl -L https://github.com/jesseduffield/lazygit/releases/download/v0.55.0/lazygit_0.55.0_linux_x86_64.tar.gz -o lazydocker.tar.gz
curl -L https://github.com/jesseduffield/lazygit/releases/download/v0.55.0/lazygit_0.55.0_linux_x86_64.tar.gz -o lazygit.tar.gz
tar xf lazygit.tar.gz
sudo mv lazygit /usr/local/bin
lazygit
lazydocker\

htop
sudo apt install filelight htop 
sudo apt install fastfetch
fastfetch
htop
clear
# Add Docker's official GPG key:\
sudo apt-get update\
sudo apt-get install ca-certificates curl\
sudo install -m 0755 -d /etc/apt/keyrings\
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\
sudo chmod a+r /etc/apt/keyrings/docker.asc\
\
# Add the repository to Apt sources:\
echo \\
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \\
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\
sudo apt-get update
sudo apt-get update\
sudo apt-get install ca-certificates curl\
sudo install -m 0755 -d /etc/apt/keyrings\
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \\
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \\
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo systemctl status docker
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo apt-get remove docker docker-engine docker.io containerd runc\

sudo apt-get update\
sudo apt-get install ca-certificates curl gnupg lsb-release\

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\

for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
sudo apt-get update\
sudo apt-get install ca-certificates curl\
sudo install -m 0755 -d /etc/apt/keyrings\
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \\
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \\
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo systemctl status docker
sudo systemctl enable docker
sudo systemctl start docker
sudo systemctl enable docker
sudo docker run hello-world
curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg\

sudo curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg\

curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg\

sudo sh -c 'curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | gpg --dearmor --yes > /etc/apt/trusted.gpg.d/debian.griffo.io.gpg'\

sudo apt update\

sudo apt install lazydocker\

curl -L https://github.com/jesseduffield/lazydocker/releases/download/v0.24.1/lazydocker_0.24.1_Linux_x86_64.tar.gz -o lazydocker.tar.gz
tar xf lazydocker.tar.gz
sudo mv lazydocker /usr/local/bin
rm lazydocker.tar.gz\
rm README.md
lazydocker
sudo lazydocker\

sudo usermod -aG docker $USER\

lazydocker
newgrp docker\

sudo apt update\

sudo apt install software-properties-common
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo apt install ansible -y
sudo apt install vim -y 
vim .zshrc
sudo apt install nginx
sudo apt install nginx ufw 
sudo apt install ufw
chmod +x VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
sudo dpkg -i code_1.104.0-1757488003_amd64.deb
git clone git@github.com:janak0ff/devops-blog.git
cat id_rsa.pub
cat id_rsa.pub
git clone git@github.com:janak0ff/devops-blog.git
chmod 600 ~/.ssh/id_rsa\

git clone git@github.com:janak0ff/devops-blog.git
lazygit
clear
nano lazydocker-install.md
clear
exit
sudo apt update
sudo apt upgrade -y
sudo apt autoremove
sudo apt autoclean
sudo apt clean
sudo apt install gnome-disk-utility
sudo apt update
npm i
exit
# Download and install nvm:\
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash\
\
# in lieu of restarting the shell\
\. "$HOME/.nvm/nvm.sh"\
\
# Download and install Node.js:\
nvm install 22\
\
# Verify the Node.js version:\
node -v # Should print "v22.19.0".\
\
# Verify npm version:\
npm -v # Should print "10.9.3".\

docker -v
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -aG docker $USER
newgrp docker
cd /home/janak/Downloads/Dockerize-PHP-and--SQL-App/
docker compose up -d
docker compose down -v
docker compose up --build -d
docker compose down
lazydocker
cleaer
cd ..
ls
cd django-todo
clear
python3 -m venv venv
sudo apt installs python3.12-venv  -y
sudo apt install python3.11-venv\

python3 -v
npm i
node app.js
docker compose up --build -d
docker compose up --build -d
sudo docker compose up --build -d
sudo docker compose up --build -d
clear
docker compose up --build -d
code .
docker compose up --build -d
clear
docker compose up --build -d
docker compose up --build -d
docker compose down -v
code .
exit
git push origin master
git push origin main
docker ps
lazydocker
docker ps
clear
sudo apt install python3.11-venv\

python3.12 -v
python --version\

python3 --version\

sudo apt install python3.13-venv
cd django-todo
cd Downloads/django-todo/
python3 -m venv venv
source venv/bin/activate
pip install django
python3 manage.py makemigrations # Only needed if you made model changes\
python3 manage.py migrate
python3 manage.py createsuperuser
python3 manage.py makemigrations # Only needed if you made model changes\
python3 manage.py migrate
python3 manage.py runserver 0.0.0.0:8000
nano todoApp/settings.py
nano todoApp/settings.py
$ python3 manage.py runserver
python3 manage.py runserver 0.0.0.0:8000
deactivate
python3 -v
python3 --version\

clear
source venv/bin/activate
python3 manage.py runserver 0.0.0.0:8000
sudo docker build -t django-todo-app .
sudo docker run -d -p 7777:7777 django-todo-app
sudo docker ps
python3 manage.py runserver 0.0.0.0:8000
docker ps
deactivate
docker ps
whoami
sudo usermod -aG docker janak
newgrp docker
git push origin main
fastfetch
hardinfo
echo -e "\n== SYSTEM =="; uname -a; echo -e "\n== CPU =="; lscpu | grep 'Model\|CPU'; echo -e "\n== MEMORY =="; free -h; echo -e "\n== DISK =="; df -h; echo -e "\n== NETWORK =="; ip a
code .
code .
git clone git@github.com:janak0ff/janak0ff.github.io.git
code .
syncthing
clear
tar xzvf syncthing-linux-amd64-v2.0.9.tar.gz\

cd syncthing-linux-amd64-v2.0.9\

sudo cp syncthing /usr/local/bin\

cd ~\
rm -rf syncthing-linux-amd64-v2.0.9\
rm syncthing-linux-amd64-v2.0.9.tar.gz\

rm -rf syncthing-linux-amd64-v2.0.9\
rm syncthing-linux-amd64-v2.0.9.tar.gz
ip a
ps aux
df -h
syncthing
scrcpy
adb tcpip 5555
adb connect 192.168.1.87:5555
scrcpy
scrcpy -s 192.168.1.87:5555\

scrcpy -s 96407569930008W\

adb devices\

adb connect 192.168.1.87:5555
scrcpy
sudo chmod +x /usr/local/bin/
sc
scrcpy
clear
adb devices\

adb connect 192.168.1.87:5555
scrcpy
/usr/bin/scrcpy
which scrcpy\

scrcpy\

scrcpy
tar -xvzf scrcpy-linux-x86_64-v3.3.2.tar.gz\

./scrcpy\

./scrcpy\

clear
ls
./scrcpy\

./adb devices\

adb devices\

~/Downloads/scrcpy-linux-x86_64-v3.3.2 > adb devices\
\
zsh: command not found: adb\
~/Downloads/scrcpy-linux-x86_64-v3.3.2 > \
\

c
clear
adb devices\

adb devices\

adb
cleaer
clear
ls
sudo mv scrcpy adb /usr/local/bin/\

ls
sudo mv scrcpy-server /usr/local/bin/\

scrcpy
scrcpy
nano How to Cast Your Android Screen Wirelessly Using scrcpy.md
adb shell ip addr show wlan0\

adb --version\
scrcpy --version\

node --version
git checkout -b main
git checkout  master
git checkout -b main
git checkout main
git add .
cd Desktop
git clone https://github.com/ibm-developer-skills-network/lkpho-Cloud-applications-with-Node.js-and-React.git
cd lkpho-Cloud-applications-with-Node.js-and-React/CD220Labs/http_server
code   .
sudo apt up
sudo apt update
sudo apt upgrade -y
syncthing
git push origin main
git remote set-url origin https://github.com/janak0ff/lkpho-Cloud-applications-with-Node.js-and-React.git
git push origin main
git remote -v
code .
ip a
ifconfig
sudo apt install net-tools
sudo apt install net-tool
sudo apt install net-tools
sudo apt update && sudo apt upgrade -y\

sudo apt install apache2 -y\

sudo systemctl enable apache2\
sudo systemctl start apache2\

sudo systemctl start apache2
sudo apt install mariadb-server
sudo systemctl enable apache2\
sudo systemctl start apache2\

sudo systemctl status apache2 -l --no-pager\

sudo journalctl -xeu apache2.service\

sudo lsof -i :80\

sudo systemctl stop nginx\
sudo systemctl disable nginx\
sudo systemctl mask nginx\

sudo systemctl start apache2\
sudo systemctl enable apache2\

sudo mysql_secure_installation\

sudo apt install mariadb-server mariadb-client -y\

sudo mysql_secure_installation\

sudo mysql_secure_installation
mariadb --version\

mysql --version\

which mysql_secure_installation\

sudo apt update\
sudo apt install mariadb-server mariadb-client -y\

which mysql_secure_installation\

which mariadb-secure-installation\

sudo systemctl status mariadb
sudo mysql_secure_installation
sudo apt install nfs-kernel-server
sudo apt install nfs-kernel-server nfs-common -y
sudo systemctl is-enabled nfs-server\
sudo systemctl status nfs-server
sudo nano /etc/default/nfs-common
sudo nano /etc/default/nfs-common
sudo nano /etc/default/nfs-kernel-server
sudo systemctl restart nfs-server
sudo apt install ufw -y
sudo ufw allow ssh\
sudo ufw enable
ufw -v
ufw -version
sudo apt update && sudo apt upgrade -y
sudo mysql -u root -p
cd /tmp\
wget https://wordpress.org/latest.tar.gz
wget https://wordpress.org/latest.tar.gz
tar -xvzf latest.tar.gz\
sudo mv wordpress/* /var/www/html/
sudo chown -R www-data:www-data /var/www/html/\
sudo chmod -R 755 /var/www/html/
cd /var/www/html\
sudo cp wp-config-sample.php wp-config.php\
sudo nano wp-config.php
ls
sudo nano /etc/apache2/sites-available/wp.conf
ls
sudo rm index.html index.nginx-debian.html
ls
sudo nano wp-config.php
sudo mysql -u root -p
cd
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@192.168.63.132
ssh janak@192.168.253.138 -p 22
ssh janak@192.168.63.138
ssh janak@192.168.63.132
ssh janak@192.168.63.132
sudo ufw allow ssh\
sudo ufw enable
ssh janak@192.168.63.132 -p 22
ssh janak@192.168.63.132 -p 22
sudo systemctl restart nfs-server
sudo ufw allow from 192.168.10.0/24 to any port nfs\

sudo ufw reload\
sudo ufw status
mkdir -p /shared/{data,documents}\
sudo chown -R nobody:nogroup /shared
sudo mkdir -p /shared/{data,documents}\
sudo chown -R nobody:nogroup /shared
sudo mkdir -p /exports/{data,home,documents}\
sudo chown -R nobody:nogroup /exports
sudo mount --bind /home /exports/home\
sudo mount --bind /shared/data /exports/data\
sudo mount --bind /shared/documents /exports/documents
sudo df -ah
ssh janak@192.168.63.132 -p 22
npm install -g pnpm@latest-10
pnpm install
pnpm -v
clear
ssh janak@192.168.63.132
npm run dev
pnpm start
pnpm install
pnpm run dev
git push origin master
git push origin master
code .
code .
code .
git push origin master
git push origin master
pnpm run dev
sudo systemctl stop mariadb.service
sudo systemctl stop apache2.service
code .
git push origin master
git push origin master
pnpm run dev
isolation.tools.copy.disable = "FALSE"\
isolation.tools.paste.disable = "FALSE"\
isolation.tools.dnd.disable = "FALSE"\
isolation.tools.hgfs.disable = "FALSE"\

vmware-installer -l\

sudo vmware-installer -u vmware-workstation\

sudo rm -rf /etc/vmware*\
sudo rm -rf /usr/lib/vmware*\
sudo rm -rf /usr/share/doc/*vmware*\
sudo rm -rf /usr/bin/vmware*\
sudo rm -rf /usr/share/applications/vmware*\

code .
code .
ssh janak@192.168.63.132
code .
sudo apt purge virtualbox*
sudo apt purge virtualbox-7.1
mkdir Docker-wordpress && cd Docker-wordpress
sudo nano docker-compose.yml
docker-compose up -d
sudo apt install docker-compose -y
sudo apt install docker-compose -y
docker-compose -v
sudo apt update\
sudo apt install docker-compose-plugin
docker compose version
docker compose up -d
docker-compose up -d
ls
docker compose up -d
sudo systemctl status docker
sudo systemctl start docker
sudo apt install docker.io
sudo systemctl start docker
sudo usermod -aG docker $USER
newgrp docker
docker-compose up -d\

docker compose up --build -d
ip a
nano docker-compose.yml
docker ps
docker stop docker-wordpress-1
nano docker-compose.yml
cat ~/.ssh/id_rsa.pub
ssh -i xeUci4Rm@202.51.74.27
ssh -i datahub-intern@202.51.74.27
ssh -i intern@202.51.74.27
ssh -i ubuntu@202.51.74.27
clear
ssh -i ubuntu@202.51.74.27
cd
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
sudo apt update && sudo apt full-upgrade -y\
sudo apt install -y dirmngr ca-certificates software-properties-common apt-transport-https curl\
curl -fSsL https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo gpg --dearmor | sudo tee /usr/share/keyrings/oracle-virtualbox-2016.gpg > /dev/null
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list\
sudo apt update
sudo apt install virtualbox-7.1 linux-headers-$(uname -r) -y
sudo usermod -a -G vboxusers $USER
URL=https://www.aapanel.com/script/install_7.0_en.sh && if [ -f /usr/bin/curl ];then curl -ksSO "$URL" ;else wget --no-check-certificate -O install_7.0_en.sh "$URL";fi;bash install_7.0_en.sh aapanel
sudo bash install_7.0_en.sh
sudo bash install_7.0_en.sh
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa ubuntu@202.51.74.27
sudo apt install xpad
ip a
ipfconfig
sudo apt install net-tools
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
lsblk
sudo pvcreate /dev/sda1
sudo apt install lvm2 dosfstools e2fsprogs
clear
sudo pvcreate /dev/sda1
sudo apt update\
sudo apt install lvm2
sudo pvcreate /dev/sda1
lsblk
sudo vmware-installer -l
sudo vmware-installer --uninstall-product vmware-workstation
sudo /etc/init.d/vmware stop
sudo rm -rf /etc/vmware*\
sudo rm -rf /usr/lib/vmware*\
sudo rm -rf /usr/share/doc/*vmware*\
sudo rm -rf /usr/share/applications/vmware*
sudo apt-get autoremove
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.27
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
cd Downloads
ls
sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle
sudo apt update\
sudo apt install build-essential linux-headers-$(uname -r) -y
sudo ./VMware-Workstation-Full-17.6.4-24832109.x86_64.bundle
sudo apt update\
sudo apt install build-essential linux-headers-$(uname -r) -y
cd Downloads
sudo ./VMware-Workstation-Full-17.6.4-24832109.x86_64.bundle
sudo rm -rf /etc/vmware*\
sudo rm -rf /usr/lib/vmware*\
sudo rm -rf /usr/bin/vmware*\
sudo rm -rf /usr/share/doc/*vmware*\
sudo rm -rf /usr/share/applications/vmware*
sudo apt autoremove
sudo apt autoclean
sudo ./VMware-Workstation-Full-17.6.4-24832109.x86_64.bundle
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
clear
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235 -p 49499
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.235
sudo pvdisplay
sudo pvs
sudo apt purge xpad
sudo apt autoclean
sudo apt autoremove
ip link show
ip a
clear
ip a
code .
ping google.com
pnpm run dev
pnpm run dev
pnpm run dev
git push origin master
git push origin master
ssh -i ubuntu@172.16.25.150
ssh -i ubuntu@172.16.25.150 -p 22
ssh -i janak@172.16.25.150 -p 22
clear
ssh -i janak@172.16.25.150 -p 22
ssh -i janak@172.16.25.150 -p 22
ssh -i janak@172.16.25.150 -p 22
ssh janak@172.16.25.150
clear
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub janak@172.16.25.150
ssh -i ~/.ssh/id_rsa  janak@172.16.25.150
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub lun@10.10.130.200
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub lun@98.70.33.180
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub luniox@98.70.33.180
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub luniox@98.70.33.180
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
sudo systemctl stop apache2.service
sudo systemctl stop nfs
sudo systemctl stop mariadb
sudo systemctl list-units --type=service |grep running\

ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
sudo dpkg -i anydesk_7.1.0-1_arm64.deb
sudo dpkg -i anydesk_7.1.0-1_arm64.deb
code .
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
sudo apt install remmina
ssh root@202.51.74.210
telnet 202.51.74.210 3389
reboot
sudo reboot
ls
cd Docker-wordpress
docker compose up --build -d
ip a
sudo docker-compose down -v
sudo docker compose down -v
nano docker-compose.yml
sudo nano docker-compose.yml
sudo docker compose up -d
sudo nano docker-compose.yml
ls
docker compose down -v
sudo rm -rf db_data wordpress_data
ls
sudo docker compose up --build -d
docker compose down -v
sudo nano docker-compose.yml
sudo docker compose up --build -d
docker compose down
sudo apt install apache2 -y
[200~sudo systemctl enable apache2
sudo systemctl start apache2\
sudo systemctl enable apache2\

sudo apt install mariadb-server -y
ip a
mysql -u root -p
mariadb -u janak -p elearn < elearn.sql
code .
mariadb -u janak -p elearn < elearn.sql
sudo mariadb -u janak -p elearn < elearn.sql
mariadb -u root -p
sudo mariadb -u janak -p elearn < elearn.sql
php -S localhost:8000
php -S localhost:8888
docker compose up --build -d
sudo docker compose down -v
sudo docker compose up --build -d
php -S localhost:8888
sudo chmod +x rustdesk-1.4.2-x86_64.deb
sudo apt install ./rustdesk-1.4.2-x86_64.deb
code 
code .
git push origin master
git push origin master
pnpm run dev
# Add the AnyDesk GPG key\
sudo apt update\
sudo apt install ca-certificates curl apt-transport-https\
sudo install -m 0755 -d /etc/apt/keyrings\
sudo curl -fsSL https://keys.anydesk.com/repos/DEB-GPG-KEY -o /etc/apt/keyrings/keys.anydesk.com.asc\
sudo chmod a+r /etc/apt/keyrings/keys.anydesk.com.asc\
\
# Add the AnyDesk apt repository\
echo "deb [signed-by=/etc/apt/keyrings/keys.anydesk.com.asc] https://deb.anydesk.com all main" | sudo tee /etc/apt/sources.list.d/anydesk-stable.list > /dev/null\
\
# Update apt caches and install the AnyDesk client\
sudo apt update\
sudo apt install anydesk
docker ps
docker stop mariadb_server
docker stop php_web_app
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
clear
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
nano phpmyadmin-forgot-pass.md
code .
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
php -S localhost:8888
php -S localhost:8888
code .
scp -r -i /path/to/your/key.pem . ubuntu@your_ec2_public_ip:/home/ubuntu/your_app_name\
 cd /home/janak
scp -r -i ~/.ssh/id_rsa . ubuntu@202.51.74.30:/home/ubuntu/php-sql-app
php -S localhost:8888
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
cd .cache
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ping 45.115.218.154
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
telnet 98.70.33.180 22\

ls
telnet 172.22.27.155
telnet 172.22.27.155 3389
telnet 172.22.27.156 3389
telnet 172.22.27.156 3389
telnet 172.22.27.156 3389
telnet 172.22.27.155 3389
telnet 172.22.27.155 3389
telnet 172.22.27.155 3389
ping 172.22.27.155\

ping google.com
telnet 172.22.27.155 3389
ping 172.22.27.155\

telnet 172.22.27.155 3389
netstat -an | findstr 3389\

ping 110.34.5.212
telnet 110.34.5.212 3389
telnet 110.34.5.212 3389
telnet 202.51.74.210 3389
telnet 202.51.74.210 3389
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  root@202.51.74.30
ssh root@202.51.74.30
sudo apt install xrdp -y
sudo ufw status
sudo ufw allow 3389/tcp
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
telnet 202.51.74.30
ssh root@202.51.74.117
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
telnet 202.51.74.117 22
ssh root@202.51.74.117
ssh ubuntu@202.51.74.117
ip   a
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
telnet 202.51.74.30 22
ping 103.86.22.220 22
ping 103.86.22.220 3389
ping 103.90.86.220 22
ping 103.90.86.220
telnet 103.90.86.220 22
ping 103.90.86.220 22
ping 103.90.86.220
telnet 103.90.86.220 22
telnet 103.90.86.220 8080
telnet 103.90.86.220 80
code .
lazydocker
docker ps
ssh ubuntu@202.51.74.60
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.30
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.34
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.34
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.34
ssh ubuntu@202.51.74.34
ssh ubuntu@202.51.74.34
ssh ubuntu@202.51.74.34
ssh ubuntu@202.51.74.34
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.34
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.32
ping 172.22.27.155
ping 172.22.27.155
ping 172.22.27.155
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
code .
ping 172.22.27.155
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ping -c 4 202.51.74.106
ping 172.22.27.155
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ip addr show\
ip route show\

sudo nano /etc/docker/daemon.json
sudo cd /etc/docker
sudo cd /etc/docker/
cd /etc/docker\

ls
ls
sudo nano /etc/docker/daemon.json\

sudo systemctl restart docker\

ip addr show docker0\
ip route show\

docker network ls\

/etc/docker > docker network ls\
\
NETWORK ID     NAME                                           DRIVER    SCOPE\
397548ed354f   bridge                                         bridge    local\
72c9672edb68   dockerize-php-and--sql-app_my_custom_network   bridge    local\
593637660a1b   host                                           host      local\
39f2c98d752d   none                                           null      local\
/etc/docker > \

cd
docker network rm dockerize-php-and--sql-app_my_custom_network\

ip route show\

ssh ubuntu@103.90.86.244
ssh root@103.90.86.244
cat /home/janak/.ssh/known_hosts
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.210
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.210
ssh-keygen -f "/home/janak/.ssh/known_hosts" -R "202.51.74.127"\

ssh ubuntu@202.51.74.127
ssh root@202.51.74.127
ssh ubuntu@103.90.86.210
ssh ubuntu@202.51.74.210
ssh root@202.51.74.210
ssh-keygen -f "/home/janak/.ssh/known_hosts" -R "202.51.74.210"\

ssh ubuntu@202.51.74.210\

ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo apt dust-upgrade -y
sudo apt update
sudo apt full-upgrade -y
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
sudo apt update && sudo apt install nfs-kernel-server nfs-common -y\

sudo mkdir -p /srv/nfs/shared\
sudo chown nobody:nogroup /srv/nfs/shared   # For Ubuntu/Debian\
sudo chmod 755 /srv/nfs/shared\

sudo mkdir -p /home/janak/Desktop/shared-nfs/\
sudo chown nobody:nogroup /home/janak/Desktop/shared-nfs/  # For open access\
sudo chmod 777 /home/janak/Desktop/shared-nfs/             # Everyone can read/write\

udo mkdir -p /home/janak/Desktop/shared-nfs/udo chown nobody:nogroup /home/janak/Desktop/shared-nfs/  # For open access\
sudo chmod 777 /home/janak/Desktop/shared-nfs/  
sudo chown nobody:nogroup /home/janak/Desktop/shared-nfs/
sudo chmod 777 /home/janak/Desktop/shared-nfs/ 
sudo nano /etc/exports\

sudo exportfs -ra\
sudo systemctl restart nfs-kernel-server\

ip a
sudo systemctl status nfs-kernel-server\

sudo ufw status\

sudo ufw allow from 192.168.1.0/24 to any port nfs\

/home/janak/Desktop/shared-nfs/ 192.168.1.0/24(rw,sync,no_subtree_check)\

sudo nano /etc/exports
sudo exportfs -ra\

sudo exportfs -v\

sudo ss -tulpn | grep -E '2049|111'\

sudo nano /etc/exports
sudo systemctl reload  nfs-kernel-server\

ip a
code .
ip a
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
git push origin master
pnpm run dev
code .
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo docker build -t astropaper .
docker run -p 4321:80 astropaper
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
code .
sudo apt update
sudo apt upgrade -y
sudo apt clean
sudo apt autoremove
sudo apt autoclean

sudo apt update
sudo apt upgrade -y
sudo apt clean
sudo apt autoremove
sudo apt autoclean

ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh ubuntu@202.51.74.210\

code .
git push origin main
git pull origin main\

git push origin main\

git config pull.rebase false\
git pull origin main\

git config pull.rebase true\
git pull origin main\

git push origin main\

ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ping 202.51.74.32
telnet 202.51.74.30 22
ssh -
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ls
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
janak
source ~/.zshrc\

ls
cd wp
ls
wget https://raw.githubusercontent.com/janak0ff/zsh/main/setup_zsh.sh\

ls
wget https://raw.githubusercontent.com/janak0ff/zsh/main/.zsh_history\

ls -a
ls
source ~/.zshrc
ls -l ~/.zsh_history\
tail ~/.zsh_history\

ls -l ~/.zsh_history\
tail ~/.zsh_history\

ip a
sudo apt update\
sudo apt install nfs-kernel-server nfs-common\

sudo mkdir -p /srv/nfs/shared\
sudo chown nobody:nogroup /srv/nfs/shared\
sudo chmod 777 /srv/nfs/shared\

sudo nano /etc/exports\

sudo exportfs -ra\

sudo systemctl enable --now nfs-server\

sudo ufw status\

sudo netstat -tulpn | grep zabbix
sudo systemctl list-units --type=service |grep running\

sudo ufw status
wget https://repo.percona.com/apt/percona-release_latest.generic_all.deb\
sudo dpkg -i percona-release_latest.generic_all.deb
sudo apt update
sudo percona-release setup pxc80\
sudo apt install percona-xtradb-cluster -y
sudo systemctl stop mysql
cd /etc/mysql/percona-xtradb-cluster.conf.d/
sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
sudo mkdir -p /etc/mysql/percona-xtradb-cluster.conf.d/
sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
ip a
sudo nano /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
sudo galera_new_cluster
# Stop the service first\
sudo systemctl stop mysql\
\
# Bootstrap the cluster directly\
sudo systemctl start mysql@bootstrap
sudo systemctl start mysql@bootstrap
sudo systemctl status mysql
mysql -u root -p
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
./update_history_repo.sh
rsync -avz ubuntu@202.51.74.32:/home/ubuntu/.zsh_history ~/ 
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
sudo apt autoclean
sudo apt autoclean
sudo apt autoremove
sudo apt clean
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh ubuntu@202.51.74.210\

ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
telnet 202.51.74.32 22
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.134
clear
ssh ubuntu@202.51.74.134
ssh ubuntu@202.51.74.134
ssh ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh-keygen -f "/home/janak/.ssh/known_hosts" -R "202.51.74.134"\

ssh ubuntu@202.51.74.134\

sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.134
sudo ssh-keygen -f "/root/.ssh/known_hosts" -R "202.51.74.134"\

sudo ssh-copy-id -i ~/.ssh/id_rsa.pub ubuntu@202.51.74.134\

ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.34
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.1
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.210
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
sudo apt install ghostty
curl -sS https://debian.griffo.io/EA0F721D231FDD3A0A17B9AC7808B4DD62C41256.asc | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/debian.griffo.io.gpg echo "deb https://debian.griffo.io/apt $(lsb_release -sc 2>/dev/null) main" | sudo tee /etc/apt/sources.list.d/debian.griffo.io.list sudo apt update
sudo apt install ghostty
lsb_release -a
cd Downloads/
ls
sudo apt install ./ghostty_1.2.1-1+trixie_amd64.deb
ghostty
ghostty
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
echo 'deb http://download.opensuse.org/repositories/home:/clayrisser:/bookworm/Debian_12/ /' | sudo tee /etc/apt/sources.list.d/home:clayrisser:bookworm.list\
curl -fsSL https://download.opensuse.org/repositories/home:clayrisser:bookworm/Debian_12/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_clayrisser_bookworm.gpg > /dev/null\
sudo apt update\

sudo apt install ghostty\

sudo nano ~/.local/share/applications/ghostty.desktop\

update-desktop-database ~/.local/share/applications/\

sudo apt update
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
pnpm run dev
git push origin master\

git push origin master\

code .
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.134
ssh -i ~/.ssh/id_rsa  ubuntu@202.51.74.32
